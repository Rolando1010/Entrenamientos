{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar AlphaNumericUnderscore = /^[a-zA-Z0-9_]+$/;\nexport function objectKeyValuesAreStrings(object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var entries = Object.entries(object);\n\n  for (var i = 0; i < entries.length; i++) {\n    var _entries$i = _slicedToArray(entries[i], 2),\n        key = _entries$i[0],\n        value = _entries$i[1];\n\n    if (!isString(key) || !isString(value)) {\n      return false;\n    }\n  }\n\n  return true;\n}\nexport function isNull(value) {\n  return value === null;\n}\nexport function isObject(value) {\n  return value ? typeof value === 'object' && !Array.isArray(value) && !isNull(value) : false;\n}\nexport function isDate(value) {\n  return value && Object.prototype.toString.call(value) === '[object Date]' && !isNaN(value);\n}\nexport function isFunction(value) {\n  return value ? typeof value === 'function' : false;\n}\nexport function isString(value) {\n  return typeof value === 'string';\n}\nexport function isNumber(value) {\n  return typeof value === 'number';\n}\nexport function isFinite(value) {\n  return Number.isFinite(value);\n}\nexport function isInteger(value) {\n  return Number.isInteger(value);\n}\nexport function isBoolean(value) {\n  return typeof value === 'boolean';\n}\nexport function isArray(value) {\n  return Array.isArray(value);\n}\nexport function isUndefined(value) {\n  return typeof value === 'undefined';\n}\nexport function isAlphaNumericUnderscore(value) {\n  return AlphaNumericUnderscore.test(value);\n}\nvar IS_VALID_URL_REGEX = /^(http|https):\\/\\/[^ \"]+$/;\nexport function isValidUrl(url) {\n  return IS_VALID_URL_REGEX.test(url);\n}\nexport function isOneOf(value) {\n  var oneOf = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n\n  if (!isArray(oneOf)) {\n    return false;\n  }\n\n  return oneOf.includes(value);\n}\nexport function noop() {}\nexport function validateOptionalNativeDependencyExists(firebaseJsonKey, apiName, nativeFnExists) {\n  if (nativeFnExists) {\n    return;\n  }\n\n  var errorMessage = \"You attempted to use an optional API that's not enabled natively. \\n\\n To enable \";\n  errorMessage += apiName;\n  errorMessage += \" please set the 'react-native' -> '\" + firebaseJsonKey + \"' key to true in your firebase.json file\";\n\n  if (Platform.OS === 'android') {\n    errorMessage += ' and rebuild your Android app.';\n  } else {\n    errorMessage += ', re-run pod install and rebuild your iOS app. ' + \"If you're not using Pods then make sure you've have downloaded the necessary Firebase iOS SDK dependencies for this API.\";\n  }\n\n  throw new Error(errorMessage);\n}","map":{"version":3,"mappings":"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","names":["AlphaNumericUnderscore","objectKeyValuesAreStrings","object","isObject","entries","Object","i","length","key","value","isString","isNull","Array","isArray","isDate","prototype","toString","call","isNaN","isFunction","isNumber","isFinite","Number","isInteger","isBoolean","isUndefined","isAlphaNumericUnderscore","test","IS_VALID_URL_REGEX","isValidUrl","url","isOneOf","oneOf","includes","noop","validateOptionalNativeDependencyExists","firebaseJsonKey","apiName","nativeFnExists","errorMessage","Platform","OS","Error"],"sources":["validate.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Platform } from 'react-native';\n\nconst AlphaNumericUnderscore = /^[a-zA-Z0-9_]+$/;\n\nexport function objectKeyValuesAreStrings(object: Record<string, unknown>) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  const entries = Object.entries(object);\n\n  for (let i = 0; i < entries.length; i++) {\n    const [key, value] = entries[i];\n    if (!isString(key) || !isString(value)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Simple is null check.\n *\n * @param value\n * @returns {boolean}\n */\nexport function isNull(value: unknown) {\n  return value === null;\n}\n\n/**\n * Simple is object check.\n *\n * @param value\n * @returns {boolean}\n */\nexport function isObject(value: unknown) {\n  return value ? typeof value === 'object' && !Array.isArray(value) && !isNull(value) : false;\n}\n\n/**\n * Simple is date check\n * https://stackoverflow.com/a/44198641\n * @param value\n * @returns {boolean}\n */\nexport function isDate(value: number) {\n  // use the global isNaN() and not Number.isNaN() since it will validate an Invalid Date\n  return value && Object.prototype.toString.call(value) === '[object Date]' && !isNaN(value);\n}\n\n/**\n * Simple is function check\n *\n * @param value\n * @returns {*|boolean}\n */\nexport function isFunction(value: unknown) {\n  return value ? typeof value === 'function' : false;\n}\n\n/**\n * Simple is string check\n * @param value\n * @return {boolean}\n */\nexport function isString(value: unknown) {\n  return typeof value === 'string';\n}\n\n/**\n * Simple is number check\n * @param value\n * @return {boolean}\n */\nexport function isNumber(value: unknown): value is number {\n  return typeof value === 'number';\n}\n\n/**\n * Simple finite check\n * @param value\n * @returns {boolean}\n */\nexport function isFinite(value: unknown) {\n  return Number.isFinite(value);\n}\n\n/**\n * Simple integer check\n * @param value\n * @returns {boolean}\n */\nexport function isInteger(value: unknown) {\n  return Number.isInteger(value);\n}\n\n/**\n * Simple is boolean check\n *\n * @param value\n * @return {boolean}\n */\nexport function isBoolean(value: unknown) {\n  return typeof value === 'boolean';\n}\n\n/**\n *\n * @param value\n * @returns {arg is Array<unknown>}\n */\nexport function isArray(value: unknown) {\n  return Array.isArray(value);\n}\n\n/**\n *\n * @param value\n * @returns {boolean}\n */\nexport function isUndefined(value: unknown): value is undefined {\n  return typeof value === 'undefined';\n}\n\n/**\n * /^[a-zA-Z0-9_]+$/\n *\n * @param value\n * @returns {boolean}\n */\nexport function isAlphaNumericUnderscore(value: string) {\n  return AlphaNumericUnderscore.test(value);\n}\n\n/**\n * URL test\n * @param url\n * @returns {boolean}\n */\nconst IS_VALID_URL_REGEX = /^(http|https):\\/\\/[^ \"]+$/;\nexport function isValidUrl(url: string) {\n  return IS_VALID_URL_REGEX.test(url);\n}\n\n/**\n * Array includes\n *\n * @param value\n * @param oneOf\n * @returns {boolean}\n */\nexport function isOneOf(value: unknown, oneOf: unknown[] = []) {\n  if (!isArray(oneOf)) {\n    return false;\n  }\n  return oneOf.includes(value);\n}\n\nexport function noop() {\n  // noop-üêà\n}\n\nexport function validateOptionalNativeDependencyExists(\n  firebaseJsonKey: string,\n  apiName: string,\n  nativeFnExists: boolean,\n) {\n  if (nativeFnExists) {\n    return;\n  }\n  let errorMessage =\n    \"You attempted to use an optional API that's not enabled natively. \\n\\n To enable \";\n\n  errorMessage += apiName;\n  errorMessage += ` please set the 'react-native' -> '${firebaseJsonKey}' key to true in your firebase.json file`;\n\n  if (Platform.OS === 'android') {\n    errorMessage += ' and rebuild your Android app.';\n  } else {\n    errorMessage +=\n      ', re-run pod install and rebuild your iOS app. ' +\n      \"If you're not using Pods then make sure you've have downloaded the necessary Firebase iOS SDK dependencies for this API.\";\n  }\n\n  throw new Error(errorMessage);\n}\n"]},"metadata":{},"sourceType":"module"}