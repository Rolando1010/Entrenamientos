{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useMemo } from \"react\";\nimport { useParams } from \"react-router-native\";\nimport { infoToast, successToast } from \"../components/toast\";\nimport { getExercises, saveExercise, removeExercise } from \"../services/day-workout\";\nimport useGlobalState from \"./useGlobalState\";\n\nvar useExercises = function useExercises() {\n  var _useGlobalState = useGlobalState(),\n      globalState = _useGlobalState.globalState,\n      setGlobalState = _useGlobalState.setGlobalState;\n\n  var _useParams = useParams(),\n      exerciseName = _useParams.exerciseName;\n\n  var dayExercises = useMemo(function () {\n    return (globalState == null ? void 0 : globalState.dayExercises) || [];\n  }, [globalState.dayExercises]);\n\n  var addExercise = function addExercise(_ref) {\n    var weight = _ref.weight,\n        reps = _ref.reps;\n    return _asyncToGenerator(function* () {\n      var date = globalState.date;\n      yield saveExercise(date, exerciseName, weight, reps);\n      setGlobalState(_objectSpread(_objectSpread({}, globalState), {}, {\n        dayExercises: yield getExercises(date)\n      }));\n      successToast(\"Serie añadida\");\n    });\n  };\n\n  var deleteExercise = function deleteExercise(exercise) {\n    return _asyncToGenerator(function* () {\n      var date = globalState.date;\n      yield removeExercise(date, exercise);\n      setGlobalState(_objectSpread(_objectSpread({}, globalState), {}, {\n        dayExercises: yield getExercises(date)\n      }));\n      infoToast(\"Ejercicio removido\");\n    });\n  };\n\n  return {\n    dayExercises: dayExercises,\n    addExercise: addExercise,\n    deleteExercise: deleteExercise\n  };\n};\n\nexport default useExercises;","map":{"version":3,"names":["useMemo","useParams","infoToast","successToast","getExercises","saveExercise","removeExercise","useGlobalState","useExercises","globalState","setGlobalState","exerciseName","dayExercises","addExercise","weight","reps","date","deleteExercise","exercise"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/hooks/useExercises.js"],"sourcesContent":["import { useMemo } from \"react\";\r\nimport { useParams } from \"react-router-native\";\r\nimport { infoToast, successToast } from \"../components/toast\";\r\nimport { getExercises, saveExercise, removeExercise } from \"../services/day-workout\";\r\nimport useGlobalState from \"./useGlobalState\";\r\n\r\nconst useExercises = () => {\r\n    const { globalState, setGlobalState } = useGlobalState();\r\n    const { exerciseName } = useParams();\r\n\r\n    const dayExercises = useMemo(() => globalState?.dayExercises || [], [globalState.dayExercises]);\r\n\r\n    const addExercise = ({weight, reps}) => async () => {\r\n        const { date } = globalState;\r\n        await saveExercise(date, exerciseName, weight, reps);\r\n        setGlobalState({...globalState, dayExercises: await getExercises(date)});\r\n        successToast(\"Serie añadida\");\r\n    }\r\n\r\n    const deleteExercise = (exercise) => async () => {\r\n        const { date } = globalState;\r\n        await removeExercise(date, exercise);\r\n        setGlobalState({...globalState, dayExercises: await getExercises(date)});\r\n        infoToast(\"Ejercicio removido\");\r\n    }\r\n\r\n    return {\r\n        dayExercises,\r\n        addExercise,\r\n        deleteExercise\r\n    }\r\n}\r\n\r\nexport default useExercises;"],"mappings":";;;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,SAASC,SAAT,EAAoBC,YAApB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,cAArC;AACA,OAAOC,cAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;EACvB,sBAAwCD,cAAc,EAAtD;EAAA,IAAQE,WAAR,mBAAQA,WAAR;EAAA,IAAqBC,cAArB,mBAAqBA,cAArB;;EACA,iBAAyBT,SAAS,EAAlC;EAAA,IAAQU,YAAR,cAAQA,YAAR;;EAEA,IAAMC,YAAY,GAAGZ,OAAO,CAAC;IAAA,OAAM,CAAAS,WAAW,QAAX,YAAAA,WAAW,CAAEG,YAAb,KAA6B,EAAnC;EAAA,CAAD,EAAwC,CAACH,WAAW,CAACG,YAAb,CAAxC,CAA5B;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc;IAAA,IAAEC,MAAF,QAAEA,MAAF;IAAA,IAAUC,IAAV,QAAUA,IAAV;IAAA,yBAAoB,aAAY;MAChD,IAAQC,IAAR,GAAiBP,WAAjB,CAAQO,IAAR;MACA,MAAMX,YAAY,CAACW,IAAD,EAAOL,YAAP,EAAqBG,MAArB,EAA6BC,IAA7B,CAAlB;MACAL,cAAc,iCAAKD,WAAL;QAAkBG,YAAY,QAAQR,YAAY,CAACY,IAAD;MAAlD,GAAd;MACAb,YAAY,CAAC,eAAD,CAAZ;IACH,CALmB;EAAA,CAApB;;EAOA,IAAMc,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;IAAA,yBAAc,aAAY;MAC7C,IAAQF,IAAR,GAAiBP,WAAjB,CAAQO,IAAR;MACA,MAAMV,cAAc,CAACU,IAAD,EAAOE,QAAP,CAApB;MACAR,cAAc,iCAAKD,WAAL;QAAkBG,YAAY,QAAQR,YAAY,CAACY,IAAD;MAAlD,GAAd;MACAd,SAAS,CAAC,oBAAD,CAAT;IACH,CALsB;EAAA,CAAvB;;EAOA,OAAO;IACHU,YAAY,EAAZA,YADG;IAEHC,WAAW,EAAXA,WAFG;IAGHI,cAAc,EAAdA;EAHG,CAAP;AAKH,CAzBD;;AA2BA,eAAeT,YAAf"},"metadata":{},"sourceType":"module"}