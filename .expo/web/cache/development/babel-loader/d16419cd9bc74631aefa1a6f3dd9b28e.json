{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport storage from \"../utils/storage\";\n\nvar iterateRegistersExercise = function iterateRegistersExercise(exercise, callback) {\n  storage.getAll().then(function (data) {\n    Object.entries(data).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      if (key.includes(\"/\")) {\n        var exerciseInDay = value.find(function (_ref3) {\n          var name = _ref3.name;\n          return name === exercise;\n        });\n        if (exerciseInDay) callback(key, exerciseInDay);\n      }\n    });\n  });\n};\n\nvar getDaysExercise = function getDaysExercise(exercise) {\n  return new Promise(function (resolve) {\n    iterateRegistersExercise(exercise, function (day, exerciseInDay) {});\n    storage.getAll().then(function (data) {\n      resolve(Object.entries(data).reduce(function (acc, _ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n            key = _ref5[0],\n            value = _ref5[1];\n\n        if (!key.includes(\"/\")) return acc;\n        var exerciseInDay = value.find(function (e) {\n          return e.name === exercise;\n        });\n        if (!exerciseInDay) return acc;\n        return [].concat(_toConsumableArray(acc), [{\n          date: key,\n          series: exerciseInDay.series\n        }]);\n      }, []));\n    });\n  });\n};\n\nvar getRMsExercise = function getRMsExercise(exercise) {\n  return new Promise(function (resolve) {\n    storage.getAll().then(function (data) {\n      var days = [];\n      var rms = [];\n      Object.entries(data).forEach(function (_ref6) {\n        var _ref7 = _slicedToArray(_ref6, 2),\n            key = _ref7[0],\n            value = _ref7[1];\n\n        if (key.includes(\"/\")) {\n          var exerciseInDay = value.find(function (_ref8) {\n            var name = _ref8.name;\n            return name === exercise;\n          });\n\n          if (exerciseInDay) {\n            var maxRM = exerciseInDay.series.reduce(function (maxRM, _ref9) {\n              var weight = _ref9.weight,\n                  reps = _ref9.reps;\n              var serieRM = weight * (1 + 0.025 * reps);\n              if (serieRM > maxRM) return serieRM;\n              return maxRM;\n            }, 0);\n            days.push(key);\n            rms.push(maxRM);\n          }\n        }\n      });\n      resolve({\n        days: days,\n        rms: rms\n      });\n    });\n  });\n};\n\nvar getMaxWeightExercise = function getMaxWeightExercise(exercise) {\n  return new Promise(function (resolve) {\n    storage.getAll().then(function (data) {\n      var days = [];\n      var weights = [];\n      Object.entries(data).forEach(function (_ref10) {\n        var _ref11 = _slicedToArray(_ref10, 2),\n            key = _ref11[0],\n            value = _ref11[1];\n      });\n    });\n  });\n};\n\nexport { getDaysExercise, getRMsExercise };","map":{"version":3,"names":["storage","iterateRegistersExercise","exercise","callback","getAll","then","data","Object","entries","forEach","key","value","includes","exerciseInDay","find","name","getDaysExercise","Promise","resolve","day","reduce","acc","e","date","series","getRMsExercise","days","rms","maxRM","weight","reps","serieRM","push","getMaxWeightExercise","weights"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/services/exercises.js"],"sourcesContent":["import storage from \"../utils/storage\";\r\n\r\nconst iterateRegistersExercise = (exercise, callback) => {\r\n    storage.getAll().then(data => {\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            if(key.includes(\"/\")){\r\n                const exerciseInDay = value.find(({ name }) => name === exercise);\r\n                if(exerciseInDay) callback(key, exerciseInDay);\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\nconst getDaysExercise = exercise => new Promise(resolve => {\r\n    iterateRegistersExercise(exercise, (day, exerciseInDay) => {\r\n\r\n    });\r\n    storage.getAll().then(data => {\r\n        resolve(Object.entries(data).reduce((acc, [key, value]) => {\r\n            if(!key.includes(\"/\")) return acc;\r\n            const exerciseInDay = value.find(e => e.name === exercise);\r\n            if(!exerciseInDay) return acc;\r\n            return [...acc, {date: key, series: exerciseInDay.series}];\r\n        }, []));\r\n    });\r\n});\r\n\r\nconst getRMsExercise = exercise => new Promise(resolve => {\r\n    storage.getAll().then(data => {\r\n        const days = [];\r\n        const rms = [];\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            if(key.includes(\"/\")){\r\n                const exerciseInDay = value.find(({ name }) => name === exercise);\r\n                if(exerciseInDay){\r\n                    const maxRM = exerciseInDay.series.reduce((maxRM, { weight, reps }) => {\r\n                        const serieRM = weight * (1 + 0.025 * reps);\r\n                        if(serieRM > maxRM) return serieRM;\r\n                        return maxRM;\r\n                    }, 0);\r\n                    days.push(key);\r\n                    rms.push(maxRM);\r\n                }\r\n            }\r\n        });\r\n        resolve({ days, rms });\r\n    });\r\n});\r\n\r\nconst getMaxWeightExercise = exercise => new Promise(resolve => {\r\n    storage.getAll().then(data => {\r\n        const days = [];\r\n        const weights = [];\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            \r\n        });\r\n    });\r\n});\r\n\r\nexport {\r\n    getDaysExercise,\r\n    getRMsExercise\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}