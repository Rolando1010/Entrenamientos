{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useCallback, useEffect, useReducer } from 'react';\nimport { AdEventType } from \"../AdEventType\";\nimport { RewardedAdEventType } from \"../RewardedAdEventType\";\nvar initialState = {\n  isLoaded: false,\n  isOpened: false,\n  isClicked: false,\n  isClosed: false,\n  error: undefined,\n  reward: undefined,\n  isEarnedReward: false\n};\nexport function useFullScreenAd(ad) {\n  var _useReducer = useReducer(function (prevState, newState) {\n    return _objectSpread(_objectSpread({}, prevState), newState);\n  }, initialState),\n      _useReducer2 = _slicedToArray(_useReducer, 2),\n      state = _useReducer2[0],\n      setState = _useReducer2[1];\n\n  var isShowing = state.isOpened && !state.isClosed;\n  var load = useCallback(function () {\n    if (ad) {\n      setState(initialState);\n      ad.load();\n    }\n  }, [ad]);\n  var show = useCallback(function (showOptions) {\n    if (ad) {\n      ad.show(showOptions);\n    }\n  }, [ad]);\n  useEffect(function () {\n    setState(initialState);\n\n    if (!ad) {\n      return;\n    }\n\n    var unsubscribe = ad.addAdEventsListener(function (_ref) {\n      var type = _ref.type,\n          payload = _ref.payload;\n\n      switch (type) {\n        case AdEventType.LOADED:\n          setState({\n            isLoaded: true\n          });\n          break;\n\n        case AdEventType.OPENED:\n          setState({\n            isOpened: true\n          });\n          break;\n\n        case AdEventType.CLOSED:\n          setState({\n            isClosed: true,\n            isLoaded: false\n          });\n          break;\n\n        case AdEventType.CLICKED:\n          setState({\n            isClicked: true\n          });\n          break;\n\n        case AdEventType.ERROR:\n          setState({\n            error: payload\n          });\n          break;\n\n        case RewardedAdEventType.LOADED:\n          setState({\n            isLoaded: true,\n            reward: payload\n          });\n          break;\n\n        case RewardedAdEventType.EARNED_REWARD:\n          setState({\n            isEarnedReward: true,\n            reward: payload\n          });\n          break;\n      }\n    });\n    return function () {\n      unsubscribe();\n    };\n  }, [ad]);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    isShowing: isShowing,\n    load: load,\n    show: show\n  });\n}","map":{"version":3,"mappings":";;;;;;;AAiBA,SAAkBA,WAAlB,EAA+BC,SAA/B,EAA0CC,UAA1C,QAA4D,OAA5D;AAEA,SAASC,WAAT;AAKA,SAASC,mBAAT;AAKA,IAAMC,YAAsB,GAAG;EAC7BC,QAAQ,EAAE,KADmB;EAE7BC,QAAQ,EAAE,KAFmB;EAG7BC,SAAS,EAAE,KAHkB;EAI7BC,QAAQ,EAAE,KAJmB;EAK7BC,KAAK,EAAEC,SALsB;EAM7BC,MAAM,EAAED,SANqB;EAO7BE,cAAc,EAAE;AAPa,CAA/B;AAUA,OAAO,SAASC,eAAT,CAELC,EAFK,EAEiB;EACtB,kBAA0Bb,UAAU,CAClC,UAACc,SAAD,EAAYC,QAAZ;IAAA,uCAA+BD,SAA/B,GAA6CC,QAA7C;EAAA,CADkC,EAElCZ,YAFkC,CAApC;EAAA;EAAA,IAAOa,KAAP;EAAA,IAAcC,QAAd;;EAIA,IAAMC,SAAS,GAAGF,KAAK,CAACX,QAANW,IAAkB,CAACA,KAAK,CAACT,QAA3C;EAEA,IAAMY,IAAI,GAAGrB,WAAW,CAAC,YAAM;IAC7B,IAAIe,EAAJ,EAAQ;MACNI,QAAQ,CAACd,YAAD,CAARc;MACAJ,EAAE,CAACM,IAAHN;IACF;EACD,CALuB,EAKrB,CAACA,EAAD,CALqB,CAAxB;EAOA,IAAMO,IAAI,GAAGtB,WAAW,CACrBuB,qBAA2B,EAAK;IAC/B,IAAIR,EAAJ,EAAQ;MACNA,EAAE,CAACO,IAAHP,CAAQQ,WAARR;IACF;EACD,CALqB,EAMtB,CAACA,EAAD,CANsB,CAAxB;EASAd,SAAS,CAAC,YAAM;IACdkB,QAAQ,CAACd,YAAD,CAARc;;IACA,IAAI,CAACJ,EAAL,EAAS;MACP;IACF;;IACA,IAAMS,WAAW,GAAIT,EAAE,CAAgBU,mBAAlBV,CAAsC,gBAAuB;MAAA,IAApBW,IAAoB,GAALC,IAAK,CAApBD,IAAoB;MAAA,IAAdE,OAAc,GAALD,IAAK,CAAdC,OAAc;;MAChF,QAAQF,IAAR;QACE,KAAKvB,WAAW,CAAC0B,MAAjB;UACEV,QAAQ,CAAC;YAAEb,QAAQ,EAAE;UAAZ,CAAD,CAARa;UACA;;QACF,KAAKhB,WAAW,CAAC2B,MAAjB;UACEX,QAAQ,CAAC;YAAEZ,QAAQ,EAAE;UAAZ,CAAD,CAARY;UACA;;QACF,KAAKhB,WAAW,CAAC4B,MAAjB;UACEZ,QAAQ,CAAC;YAAEV,QAAQ,EAAE,IAAZ;YAAkBH,QAAQ,EAAE;UAA5B,CAAD,CAARa;UACA;;QACF,KAAKhB,WAAW,CAAC6B,OAAjB;UACEb,QAAQ,CAAC;YAAEX,SAAS,EAAE;UAAb,CAAD,CAARW;UACA;;QACF,KAAKhB,WAAW,CAAC8B,KAAjB;UACEd,QAAQ,CAAC;YAAET,KAAK,EAAEkB;UAAT,CAAD,CAART;UACA;;QACF,KAAKf,mBAAmB,CAACyB,MAAzB;UACEV,QAAQ,CAAC;YAAEb,QAAQ,EAAE,IAAZ;YAAkBM,MAAM,EAAEgB;UAA1B,CAAD,CAART;UACA;;QACF,KAAKf,mBAAmB,CAAC8B,aAAzB;UACEf,QAAQ,CAAC;YAAEN,cAAc,EAAE,IAAlB;YAAwBD,MAAM,EAAEgB;UAAhC,CAAD,CAART;UACA;MArBJ;IAuBD,CAxBoBJ,CAArB;IAyBA,OAAO,YAAM;MACXS,WAAW;IACZ,CAFD;EAGD,CAjCQ,EAiCN,CAACT,EAAD,CAjCM,CAATd;EAmCA,uCACKiB,KADL;IAEEE,SAAS,EAATA,SAFF;IAGEC,IAAI,EAAJA,IAHF;IAIEC;EAJF;AAMF","names":["useCallback","useEffect","useReducer","AdEventType","RewardedAdEventType","initialState","isLoaded","isOpened","isClicked","isClosed","error","undefined","reward","isEarnedReward","useFullScreenAd","ad","prevState","newState","state","setState","isShowing","load","show","showOptions","unsubscribe","addAdEventsListener","type","_ref","payload","LOADED","OPENED","CLOSED","CLICKED","ERROR","EARNED_REWARD"],"sources":["useFullScreenAd.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Reducer, useCallback, useEffect, useReducer } from 'react';\n\nimport { AdEventType } from '../AdEventType';\nimport { AppOpenAd } from '../ads/AppOpenAd';\nimport { InterstitialAd } from '../ads/InterstitialAd';\nimport { RewardedAd } from '../ads/RewardedAd';\nimport { RewardedInterstitialAd } from '../ads/RewardedInterstitialAd';\nimport { RewardedAdEventType } from '../RewardedAdEventType';\nimport { AdStates, AdHookReturns } from '../types/AdStates';\nimport { AdShowOptions } from '../types/AdShowOptions';\nimport { RewardedAdReward } from '../types/RewardedAdReward';\n\nconst initialState: AdStates = {\n  isLoaded: false,\n  isOpened: false,\n  isClicked: false,\n  isClosed: false,\n  error: undefined,\n  reward: undefined,\n  isEarnedReward: false,\n};\n\nexport function useFullScreenAd<\n  T extends AppOpenAd | InterstitialAd | RewardedAd | RewardedInterstitialAd | null,\n>(ad: T): AdHookReturns {\n  const [state, setState] = useReducer<Reducer<AdStates, Partial<AdStates>>>(\n    (prevState, newState) => ({ ...prevState, ...newState }),\n    initialState,\n  );\n  const isShowing = state.isOpened && !state.isClosed;\n\n  const load = useCallback(() => {\n    if (ad) {\n      setState(initialState);\n      ad.load();\n    }\n  }, [ad]);\n\n  const show = useCallback(\n    (showOptions?: AdShowOptions) => {\n      if (ad) {\n        ad.show(showOptions);\n      }\n    },\n    [ad],\n  );\n\n  useEffect(() => {\n    setState(initialState);\n    if (!ad) {\n      return;\n    }\n    const unsubscribe = (ad as RewardedAd).addAdEventsListener(({ type, payload }) => {\n      switch (type) {\n        case AdEventType.LOADED:\n          setState({ isLoaded: true });\n          break;\n        case AdEventType.OPENED:\n          setState({ isOpened: true });\n          break;\n        case AdEventType.CLOSED:\n          setState({ isClosed: true, isLoaded: false });\n          break;\n        case AdEventType.CLICKED:\n          setState({ isClicked: true });\n          break;\n        case AdEventType.ERROR:\n          setState({ error: payload as Error });\n          break;\n        case RewardedAdEventType.LOADED:\n          setState({ isLoaded: true, reward: payload as RewardedAdReward });\n          break;\n        case RewardedAdEventType.EARNED_REWARD:\n          setState({ isEarnedReward: true, reward: payload as RewardedAdReward });\n          break;\n      }\n    });\n    return () => {\n      unsubscribe();\n    };\n  }, [ad]);\n\n  return {\n    ...state,\n    isShowing,\n    load,\n    show,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}