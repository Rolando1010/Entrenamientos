{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useRef, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useNavigate } from \"react-router-native\";\nimport { BackIcon, ForwardIcon } from \"../components/icons\";\nimport Table from \"../components/table\";\nimport useCalendar from \"../hooks/useCalendar\";\nimport { calendarStyles } from \"../styles/pages\";\nimport { days } from \"../utils/date\";\nimport Modal from \"../components/modal\";\nimport Button from \"../components/button\";\nimport useDate from \"../hooks/useDate\";\nimport ExerciseCard from \"../components/exercise-card\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\n\nvar Calendar = function Calendar() {\n  var _useCalendar = useCalendar(),\n      detailMonth = _useCalendar.detailMonth,\n      incrementhMonth = _useCalendar.incrementhMonth,\n      decrementhMonth = _useCalendar.decrementhMonth,\n      weeksMonth = _useCalendar.weeksMonth,\n      monthWorkouts = _useCalendar.monthWorkouts;\n\n  return _jsxs(View, {\n    children: [_jsx(MonthNavigation, {\n      detailMonth: detailMonth,\n      incrementhMonth: incrementhMonth,\n      decrementhMonth: decrementhMonth\n    }), _jsx(DaysTable, {\n      weeksMonth: weeksMonth,\n      monthWorkouts: monthWorkouts\n    })]\n  });\n};\n\nvar MonthNavigation = function MonthNavigation(_ref) {\n  var detailMonth = _ref.detailMonth,\n      incrementhMonth = _ref.incrementhMonth,\n      decrementhMonth = _ref.decrementhMonth;\n  return _jsxs(View, {\n    style: calendarStyles.navigation,\n    children: [_jsx(TouchableOpacity, {\n      onPress: decrementhMonth,\n      children: _jsx(BackIcon, {})\n    }), _jsx(Text, {\n      style: calendarStyles.title,\n      children: detailMonth\n    }), _jsx(TouchableOpacity, {\n      onPress: incrementhMonth,\n      children: _jsx(ForwardIcon, {})\n    })]\n  });\n};\n\nvar DaysTable = function DaysTable(_ref2) {\n  var weeksMonth = _ref2.weeksMonth,\n      monthWorkouts = _ref2.monthWorkouts;\n  var navigate = useNavigate();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      daySelected = _useState2[0],\n      setDaySelected = _useState2[1];\n\n  var modalRef = useRef();\n\n  var _useDate = useDate(),\n      updateWorkoutDay = _useDate.updateWorkoutDay;\n\n  var showWorkoutDay = function showWorkoutDay(day) {\n    return function () {\n      modalRef.open();\n      setDaySelected(day);\n    };\n  };\n\n  var redirectToWorkoutDay = function redirectToWorkoutDay() {\n    var _daySelected$split = daySelected.split(\"/\"),\n        _daySelected$split2 = _slicedToArray(_daySelected$split, 3),\n        day = _daySelected$split2[0],\n        month = _daySelected$split2[1],\n        year = _daySelected$split2[2];\n\n    var newDate = new Date(month + \"/\" + day + \"/\" + year);\n    updateWorkoutDay(newDate);\n    navigate(\"/\");\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsx(Table, {\n      titles: days.map(function (d) {\n        return d.slice(0, 3);\n      }),\n      data: weeksMonth.map(function (week) {\n        return week.map(function (day) {\n          return _jsx(_Fragment, {\n            children: _jsxs(TouchableOpacity, {\n              onPress: showWorkoutDay(day),\n              children: [_jsx(Text, {\n                children: day.split(\"/\")[0]\n              }), monthWorkouts[day] && _jsx(View, {\n                style: calendarStyles.workoutDay\n              })]\n            })\n          });\n        });\n      })\n    }), _jsx(Modal, {\n      title: daySelected,\n      modalRef: modalRef,\n      footerElement: _jsx(Button, {\n        onPress: redirectToWorkoutDay,\n        children: \"Ver\"\n      }),\n      children: monthWorkouts[daySelected] ? monthWorkouts[daySelected].map(function (_ref3, index) {\n        var name = _ref3.name,\n            series = _ref3.series;\n        return _jsx(ExerciseCard, {\n          name: name,\n          series: series,\n          readonly: true\n        }, \"exercise-card-\" + index);\n      }) : _jsx(Text, {\n        style: calendarStyles.emptyExercises,\n        children: \"No se han a\\xF1adido ejercicios para este d\\xEDa\"\n      })\n    })]\n  });\n};\n\nexport default Calendar;","map":{"version":3,"names":["useRef","useState","useNavigate","BackIcon","ForwardIcon","Table","useCalendar","calendarStyles","days","Modal","Button","useDate","ExerciseCard","Calendar","detailMonth","incrementhMonth","decrementhMonth","weeksMonth","monthWorkouts","MonthNavigation","navigation","title","DaysTable","navigate","daySelected","setDaySelected","modalRef","updateWorkoutDay","showWorkoutDay","day","open","redirectToWorkoutDay","split","month","year","newDate","Date","map","d","slice","week","workoutDay","index","name","series","emptyExercises"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/screens/calendar.jsx"],"sourcesContent":["import { useRef, useState } from \"react\";\r\nimport { Text, TouchableOpacity, View } from \"react-native\";\r\nimport { useNavigate } from \"react-router-native\";\r\nimport { BackIcon, ForwardIcon } from \"../components/icons\";\r\nimport Table from \"../components/table\";\r\nimport useCalendar from \"../hooks/useCalendar\";\r\nimport { calendarStyles } from \"../styles/pages\";\r\nimport { days } from \"../utils/date\";\r\nimport Modal from \"../components/modal\";\r\nimport Button from \"../components/button\";\r\nimport useDate from \"../hooks/useDate\";\r\nimport ExerciseCard from \"../components/exercise-card\";\r\n\r\nconst Calendar = () => {\r\n    const {\r\n        detailMonth,\r\n        incrementhMonth,\r\n        decrementhMonth,\r\n        weeksMonth,\r\n        monthWorkouts\r\n    } = useCalendar();\r\n\r\n    return (\r\n        <View>\r\n            <MonthNavigation\r\n                detailMonth={detailMonth}\r\n                incrementhMonth={incrementhMonth}\r\n                decrementhMonth={decrementhMonth}\r\n            />\r\n            <DaysTable\r\n                weeksMonth={weeksMonth}\r\n                monthWorkouts={monthWorkouts}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst MonthNavigation = ({ detailMonth, incrementhMonth, decrementhMonth }) =>\r\n    <View style={calendarStyles.navigation}>\r\n        <TouchableOpacity onPress={decrementhMonth}>\r\n            <BackIcon/>\r\n        </TouchableOpacity>\r\n        <Text style={calendarStyles.title}>{detailMonth}</Text>\r\n        <TouchableOpacity onPress={incrementhMonth}>\r\n            <ForwardIcon/>\r\n        </TouchableOpacity>\r\n    </View>\r\n\r\nconst DaysTable = ({ weeksMonth, monthWorkouts }) => {\r\n    const navigate = useNavigate();\r\n    const [daySelected, setDaySelected] = useState();\r\n    const modalRef = useRef();\r\n    const { updateWorkoutDay } = useDate();\r\n    \r\n    const showWorkoutDay = (day) => () => {\r\n        modalRef.open();\r\n        setDaySelected(day);\r\n    }\r\n\r\n    const redirectToWorkoutDay = () => {\r\n        const [day, month, year] = daySelected.split(\"/\");\r\n        const newDate = new Date(`${month}/${day}/${year}`);\r\n        updateWorkoutDay(newDate);\r\n        navigate(\"/\");\r\n    }\r\n\r\n    return (<>\r\n        <Table\r\n            titles={days.map(d => d.slice(0, 3))}\r\n            data={weeksMonth.map(week => week.map(day => <>\r\n                <TouchableOpacity onPress={showWorkoutDay(day)}>\r\n                    <Text>{day.split(\"/\")[0]}</Text>\r\n                    {monthWorkouts[day] &&\r\n                        <View style={calendarStyles.workoutDay}></View>\r\n                    }\r\n                </TouchableOpacity>\r\n            </>))}\r\n        />\r\n        <Modal\r\n            title={daySelected}\r\n            modalRef={modalRef}\r\n            footerElement={<Button onPress={redirectToWorkoutDay}>Ver</Button>}\r\n        >{monthWorkouts[daySelected] ?\r\n            monthWorkouts[daySelected].map(({name, series}, index) =>\r\n                <ExerciseCard\r\n                    key={`exercise-card-${index}`}\r\n                    name={name}\r\n                    series={series}\r\n                    readonly\r\n                />\r\n            )\r\n            :\r\n            <Text style={calendarStyles.emptyExercises}>No se han añadido ejercicios para este día</Text>\r\n        }</Modal>\r\n    </>);\r\n}\r\n\r\nexport default Calendar;"],"mappings":";AAAA,SAASA,MAAT,EAAiBC,QAAjB,QAAiC,OAAjC;;;;AAEA,SAASC,WAAT,QAA4B,qBAA5B;AACA,SAASC,QAAT,EAAmBC,WAAnB;AACA,OAAOC,KAAP;AACA,OAAOC,WAAP;AACA,SAASC,cAAT;AACA,SAASC,IAAT;AACA,OAAOC,KAAP;AACA,OAAOC,MAAP;AACA,OAAOC,OAAP;AACA,OAAOC,YAAP;;;;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAM;EACnB,mBAMIP,WAAW,EANf;EAAA,IACIQ,WADJ,gBACIA,WADJ;EAAA,IAEIC,eAFJ,gBAEIA,eAFJ;EAAA,IAGIC,eAHJ,gBAGIA,eAHJ;EAAA,IAIIC,UAJJ,gBAIIA,UAJJ;EAAA,IAKIC,aALJ,gBAKIA,aALJ;;EAQA,OACI,MAAC,IAAD;IAAA,WACI,KAAC,eAAD;MACI,WAAW,EAAEJ,WADjB;MAEI,eAAe,EAAEC,eAFrB;MAGI,eAAe,EAAEC;IAHrB,EADJ,EAMI,KAAC,SAAD;MACI,UAAU,EAAEC,UADhB;MAEI,aAAa,EAAEC;IAFnB,EANJ;EAAA,EADJ;AAaH,CAtBD;;AAwBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB;EAAA,IAAGL,WAAH,QAAGA,WAAH;EAAA,IAAgBC,eAAhB,QAAgBA,eAAhB;EAAA,IAAiCC,eAAjC,QAAiCA,eAAjC;EAAA,OACpB,MAAC,IAAD;IAAM,KAAK,EAAET,cAAc,CAACa,UAA5B;IAAA,WACI,KAAC,gBAAD;MAAkB,OAAO,EAAEJ,eAA3B;MAAA,UACI,KAAC,QAAD;IADJ,EADJ,EAII,KAAC,IAAD;MAAM,KAAK,EAAET,cAAc,CAACc,KAA5B;MAAA,UAAoCP;IAApC,EAJJ,EAKI,KAAC,gBAAD;MAAkB,OAAO,EAAEC,eAA3B;MAAA,UACI,KAAC,WAAD;IADJ,EALJ;EAAA,EADoB;AAAA,CAAxB;;AAWA,IAAMO,SAAS,GAAG,SAAZA,SAAY,QAAmC;EAAA,IAAhCL,UAAgC,SAAhCA,UAAgC;EAAA,IAApBC,aAAoB,SAApBA,aAAoB;EACjD,IAAMK,QAAQ,GAAGrB,WAAW,EAA5B;;EACA,gBAAsCD,QAAQ,EAA9C;EAAA;EAAA,IAAOuB,WAAP;EAAA,IAAoBC,cAApB;;EACA,IAAMC,QAAQ,GAAG1B,MAAM,EAAvB;;EACA,eAA6BW,OAAO,EAApC;EAAA,IAAQgB,gBAAR,YAAQA,gBAAR;;EAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD;IAAA,OAAS,YAAM;MAClCH,QAAQ,CAACI,IAAT;MACAL,cAAc,CAACI,GAAD,CAAd;IACH,CAHsB;EAAA,CAAvB;;EAKA,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;IAC/B,yBAA2BP,WAAW,CAACQ,KAAZ,CAAkB,GAAlB,CAA3B;IAAA;IAAA,IAAOH,GAAP;IAAA,IAAYI,KAAZ;IAAA,IAAmBC,IAAnB;;IACA,IAAMC,OAAO,GAAG,IAAIC,IAAJ,CAAYH,KAAZ,SAAqBJ,GAArB,SAA4BK,IAA5B,CAAhB;IACAP,gBAAgB,CAACQ,OAAD,CAAhB;IACAZ,QAAQ,CAAC,GAAD,CAAR;EACH,CALD;;EAOA,OAAQ;IAAA,WACJ,KAAC,KAAD;MACI,MAAM,EAAEf,IAAI,CAAC6B,GAAL,CAAS,UAAAC,CAAC;QAAA,OAAIA,CAAC,CAACC,KAAF,CAAQ,CAAR,EAAW,CAAX,CAAJ;MAAA,CAAV,CADZ;MAEI,IAAI,EAAEtB,UAAU,CAACoB,GAAX,CAAe,UAAAG,IAAI;QAAA,OAAIA,IAAI,CAACH,GAAL,CAAS,UAAAR,GAAG;UAAA,OAAI;YAAA,UACzC,MAAC,gBAAD;cAAkB,OAAO,EAAED,cAAc,CAACC,GAAD,CAAzC;cAAA,WACI,KAAC,IAAD;gBAAA,UAAOA,GAAG,CAACG,KAAJ,CAAU,GAAV,EAAe,CAAf;cAAP,EADJ,EAEKd,aAAa,CAACW,GAAD,CAAb,IACG,KAAC,IAAD;gBAAM,KAAK,EAAEtB,cAAc,CAACkC;cAA5B,EAHR;YAAA;UADyC,EAAJ;QAAA,CAAZ,CAAJ;MAAA,CAAnB;IAFV,EADI,EAYJ,KAAC,KAAD;MACI,KAAK,EAAEjB,WADX;MAEI,QAAQ,EAAEE,QAFd;MAGI,aAAa,EAAE,KAAC,MAAD;QAAQ,OAAO,EAAEK,oBAAjB;QAAA;MAAA,EAHnB;MAAA,UAIEb,aAAa,CAACM,WAAD,CAAb,GACEN,aAAa,CAACM,WAAD,CAAb,CAA2Ba,GAA3B,CAA+B,iBAAiBK,KAAjB;QAAA,IAAEC,IAAF,SAAEA,IAAF;QAAA,IAAQC,MAAR,SAAQA,MAAR;QAAA,OAC3B,KAAC,YAAD;UAEI,IAAI,EAAED,IAFV;UAGI,MAAM,EAAEC,MAHZ;UAII,QAAQ;QAJZ,sBAC0BF,KAD1B,CAD2B;MAAA,CAA/B,CADF,GAUE,KAAC,IAAD;QAAM,KAAK,EAAEnC,cAAc,CAACsC,cAA5B;QAAA;MAAA;IAdJ,EAZI;EAAA,EAAR;AA6BH,CA/CD;;AAiDA,eAAehC,QAAf"},"metadata":{},"sourceType":"module"}