{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport theme from \"../styles/theme\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LineGraph = function LineGraph(_ref) {\n  var x = _ref.x,\n      y = _ref.y;\n  return _jsxs(_Fragment, {\n    children: [_jsx(LineChart, {\n      data: {\n        labels: x,\n        datasets: [{\n          data: y\n        }]\n      },\n      width: Dimensions.get(\"window\").width - 20,\n      height: 220,\n      chartConfig: {\n        backgroundGradientFrom: theme.background2,\n        backgroundGradientTo: theme.background2,\n        decimalPlaces: 2,\n        color: function color() {\n          return theme.primary1;\n        },\n        labelColor: function labelColor() {\n          return theme.fontColor1;\n        },\n        style: {\n          paddingTop: 20\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: theme.fontColor1\n        }\n      },\n      bezier: true,\n      style: styles.line\n    }), _jsx(LineChart, {\n      data: {\n        labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\n        datasets: [{\n          data: [Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100, Math.random() * 100]\n        }]\n      },\n      width: Dimensions.get(\"window\").width,\n      height: 220,\n      yAxisLabel: \"$\",\n      yAxisSuffix: \"k\",\n      yAxisInterval: 1,\n      chartConfig: {\n        backgroundColor: \"#e26a00\",\n        backgroundGradientFrom: \"#fb8c00\",\n        backgroundGradientTo: \"#ffa726\",\n        decimalPlaces: 2,\n        color: function color() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        labelColor: function labelColor() {\n          var opacity = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n          return \"rgba(255, 255, 255, \" + opacity + \")\";\n        },\n        style: {\n          borderRadius: 16\n        },\n        propsForDots: {\n          r: \"6\",\n          strokeWidth: \"2\",\n          stroke: \"#ffa726\"\n        }\n      },\n      bezier: true,\n      style: {\n        marginVertical: 8,\n        borderRadius: 16\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  line: {\n    borderRadius: 10,\n    marginVertical: 80\n  }\n});\nexport { LineGraph };","map":{"version":3,"names":["LineChart","theme","LineGraph","x","y","labels","datasets","data","Dimensions","get","width","backgroundGradientFrom","background2","backgroundGradientTo","decimalPlaces","color","primary1","labelColor","fontColor1","style","paddingTop","propsForDots","r","strokeWidth","stroke","styles","line","Math","random","backgroundColor","opacity","borderRadius","marginVertical","StyleSheet","create"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/components/graphs.jsx"],"sourcesContent":["import { Dimensions, StyleSheet } from \"react-native\";\r\nimport { LineChart } from \"react-native-chart-kit\";\r\nimport theme from \"../styles/theme\";\r\n\r\nconst LineGraph = ({ x, y }) => <>\r\n    <LineChart\r\n        data={{\r\n            labels: x,\r\n            datasets: [{data: y}]\r\n        }}\r\n        width={Dimensions.get(\"window\").width - 20}\r\n        height={220}\r\n        chartConfig={{\r\n            backgroundGradientFrom: theme.background2,\r\n            backgroundGradientTo: theme.background2,\r\n            decimalPlaces: 2,\r\n            color: () => theme.primary1,\r\n            labelColor: () => theme.fontColor1,\r\n            style: {\r\n                paddingTop: 20\r\n            },\r\n            propsForDots: {\r\n                r: \"6\",\r\n                strokeWidth: \"2\",\r\n                stroke: theme.fontColor1\r\n            }\r\n        }}\r\n        bezier\r\n        style={styles.line}\r\n    />\r\n    <LineChart\r\n        data={{\r\n            labels: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\"],\r\n            datasets: [\r\n                {\r\n                    data: [\r\n                        Math.random() * 100,\r\n                        Math.random() * 100,\r\n                        Math.random() * 100,\r\n                        Math.random() * 100,\r\n                        Math.random() * 100,\r\n                        Math.random() * 100\r\n                    ]\r\n                }\r\n            ]\r\n        }}\r\n        width={Dimensions.get(\"window\").width} // from react-native\r\n        height={220}\r\n        yAxisLabel=\"$\"\r\n        yAxisSuffix=\"k\"\r\n        yAxisInterval={1} // optional, defaults to 1\r\n        chartConfig={{\r\n            backgroundColor: \"#e26a00\",\r\n            backgroundGradientFrom: \"#fb8c00\",\r\n            backgroundGradientTo: \"#ffa726\",\r\n            decimalPlaces: 2, // optional, defaults to 2dp\r\n            color: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(255, 255, 255, ${opacity})`,\r\n            style: {\r\n                borderRadius: 16\r\n            },\r\n            propsForDots: {\r\n                r: \"6\",\r\n                strokeWidth: \"2\",\r\n                stroke: \"#ffa726\"\r\n            }\r\n        }}\r\n        bezier\r\n        style={{\r\n            marginVertical: 8,\r\n            borderRadius: 16\r\n        }}\r\n    />\r\n</>;\r\n\r\nconst styles = StyleSheet.create({\r\n    line: {\r\n        borderRadius: 10,\r\n        marginVertical: 80,\r\n    }\r\n});\r\n\r\nexport {\r\n    LineGraph\r\n}"],"mappings":";;AACA,SAASA,SAAT,QAA0B,wBAA1B;AACA,OAAOC,KAAP;;;;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;EAAA,IAAGC,CAAH,QAAGA,CAAH;EAAA,IAAMC,CAAN,QAAMA,CAAN;EAAA,OAAc;IAAA,WAC5B,KAAC,SAAD;MACI,IAAI,EAAE;QACFC,MAAM,EAAEF,CADN;QAEFG,QAAQ,EAAE,CAAC;UAACC,IAAI,EAAEH;QAAP,CAAD;MAFR,CADV;MAKI,KAAK,EAAEI,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAAzB,GAAiC,EAL5C;MAMI,MAAM,EAAE,GANZ;MAOI,WAAW,EAAE;QACTC,sBAAsB,EAAEV,KAAK,CAACW,WADrB;QAETC,oBAAoB,EAAEZ,KAAK,CAACW,WAFnB;QAGTE,aAAa,EAAE,CAHN;QAITC,KAAK,EAAE;UAAA,OAAMd,KAAK,CAACe,QAAZ;QAAA,CAJE;QAKTC,UAAU,EAAE;UAAA,OAAMhB,KAAK,CAACiB,UAAZ;QAAA,CALH;QAMTC,KAAK,EAAE;UACHC,UAAU,EAAE;QADT,CANE;QASTC,YAAY,EAAE;UACVC,CAAC,EAAE,GADO;UAEVC,WAAW,EAAE,GAFH;UAGVC,MAAM,EAAEvB,KAAK,CAACiB;QAHJ;MATL,CAPjB;MAsBI,MAAM,MAtBV;MAuBI,KAAK,EAAEO,MAAM,CAACC;IAvBlB,EAD4B,EA0B5B,KAAC,SAAD;MACI,IAAI,EAAE;QACFrB,MAAM,EAAE,CAAC,SAAD,EAAY,UAAZ,EAAwB,OAAxB,EAAiC,OAAjC,EAA0C,KAA1C,EAAiD,MAAjD,CADN;QAEFC,QAAQ,EAAE,CACN;UACIC,IAAI,EAAE,CACFoB,IAAI,CAACC,MAAL,KAAgB,GADd,EAEFD,IAAI,CAACC,MAAL,KAAgB,GAFd,EAGFD,IAAI,CAACC,MAAL,KAAgB,GAHd,EAIFD,IAAI,CAACC,MAAL,KAAgB,GAJd,EAKFD,IAAI,CAACC,MAAL,KAAgB,GALd,EAMFD,IAAI,CAACC,MAAL,KAAgB,GANd;QADV,CADM;MAFR,CADV;MAgBI,KAAK,EAAEpB,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAhBpC;MAiBI,MAAM,EAAE,GAjBZ;MAkBI,UAAU,EAAC,GAlBf;MAmBI,WAAW,EAAC,GAnBhB;MAoBI,aAAa,EAAE,CApBnB;MAqBI,WAAW,EAAE;QACTmB,eAAe,EAAE,SADR;QAETlB,sBAAsB,EAAE,SAFf;QAGTE,oBAAoB,EAAE,SAHb;QAITC,aAAa,EAAE,CAJN;QAKTC,KAAK,EAAE;UAAA,IAACe,OAAD,uEAAW,CAAX;UAAA,gCAAwCA,OAAxC;QAAA,CALE;QAMTb,UAAU,EAAE;UAAA,IAACa,OAAD,uEAAW,CAAX;UAAA,gCAAwCA,OAAxC;QAAA,CANH;QAOTX,KAAK,EAAE;UACHY,YAAY,EAAE;QADX,CAPE;QAUTV,YAAY,EAAE;UACVC,CAAC,EAAE,GADO;UAEVC,WAAW,EAAE,GAFH;UAGVC,MAAM,EAAE;QAHE;MAVL,CArBjB;MAqCI,MAAM,MArCV;MAsCI,KAAK,EAAE;QACHQ,cAAc,EAAE,CADb;QAEHD,YAAY,EAAE;MAFX;IAtCX,EA1B4B;EAAA,EAAd;AAAA,CAAlB;;AAuEA,IAAMN,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC7BR,IAAI,EAAE;IACFK,YAAY,EAAE,EADZ;IAEFC,cAAc,EAAE;EAFd;AADuB,CAAlB,CAAf;AAOA,SACI9B,SADJ"},"metadata":{},"sourceType":"module"}