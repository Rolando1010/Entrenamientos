{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport * as Base64 from \"./Base64\";\nimport { isString, isUndefined } from \"./validate\";\nexport * from \"./id\";\nexport * from \"./path\";\nexport * from \"./promise\";\nexport * from \"./validate\";\nexport { Base64 };\nexport { ReferenceBase } from \"./ReferenceBase\";\nexport function getDataUrlParts(dataUrlString) {\n  var isBase64 = dataUrlString.includes(';base64');\n\n  var _dataUrlString$split = dataUrlString.split(','),\n      _dataUrlString$split2 = _slicedToArray(_dataUrlString$split, 2),\n      mediaType = _dataUrlString$split2[0],\n      base64String = _dataUrlString$split2[1];\n\n  if (!mediaType || !base64String) {\n    return {\n      base64String: undefined,\n      mediaType: undefined\n    };\n  }\n\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n\n  return {\n    base64String: base64String,\n    mediaType: mediaType\n  };\n}\nexport function once(fn, context) {\n  var onceResult;\n  var ranOnce = false;\n  return function onceInner() {\n    if (!ranOnce) {\n      ranOnce = true;\n\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      onceResult = fn.apply(context || this, args);\n    }\n\n    return onceResult;\n  };\n}\nexport function isError(value) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n\n  return value instanceof Error;\n}\nexport function hasOwnProperty(target, property) {\n  return Object.hasOwnProperty.call(target, property);\n}\nexport function isPropertySet(target, property) {\n  return hasOwnProperty(target, property) && !isUndefined(target[property]);\n}\nexport function stripTrailingSlash(string) {\n  if (!isString(string)) {\n    return string;\n  }\n\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\nexport var isIOS = Platform.OS === 'ios';\nexport var isAndroid = Platform.OS === 'android';\nexport function tryJSONParse(string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (jsonError) {\n    return string;\n  }\n}\nexport function tryJSONStringify(data) {\n  try {\n    return JSON.stringify(data);\n  } catch (jsonError) {\n    return null;\n  }\n}","map":{"version":3,"mappings":";;AAkBA,OAAO,KAAKA,MAAZ;AACA,SAASC,QAAT,EAAmBC,WAAnB;AAEA;AACA;AACA;AACA;AAEA,SAASF,MAAT;AACA,SAASG,aAAT;AAEA,OAAO,SAASC,eAAT,CAAyBC,aAAzB,EAAgD;EACrD,IAAMC,QAAQ,GAAGD,aAAa,CAACE,QAAdF,CAAuB,SAAvBA,CAAjB;;EACA,2BAAgCA,aAAa,CAACG,KAAdH,CAAoB,GAApBA,CAAhC;EAAA;EAAA,IAAKI,SAAL;EAAA,IAAgBC,YAAhB;;EACA,IAAI,CAACD,SAAD,IAAc,CAACC,YAAnB,EAAiC;IAC/B,OAAO;MAAEA,YAAY,EAAEC,SAAhB;MAA2BF,SAAS,EAAEE;IAAtC,CAAP;EACF;;EACAF,SAAS,GAAGA,SAAS,CAACG,OAAVH,CAAkB,OAAlBA,EAA2B,EAA3BA,EAA+BG,OAA/BH,CAAuC,SAAvCA,EAAkD,EAAlDA,CAAZA;;EACA,IAAIC,YAAY,IAAIA,YAAY,CAACH,QAAbG,CAAsB,GAAtBA,CAApB,EAAgD;IAC9CA,YAAY,GAAGG,kBAAkB,CAACH,YAAD,CAAjCA;EACF;;EACA,IAAI,CAACJ,QAAL,EAAe;IACbI,YAAY,GAAGV,MAAM,CAACc,IAAPd,CAAYU,YAAZV,CAAfU;EACF;;EACA,OAAO;IAAEA,YAAY,EAAZA,YAAF;IAAgBD;EAAhB,CAAP;AACF;AAEA,OAAO,SAASM,IAAT,CAAiBC,EAAjB,EAAiCC,OAAjC,EAAmF;EACxF,IAAIC,UAAJ;EACA,IAAIC,OAAO,GAAG,KAAd;EAEA,OAAO,SAASC,SAAT,GAAgC;IACrC,IAAI,CAACD,OAAL,EAAc;MACZA,OAAO,GAAG,IAAVA;;MAAe,kCAFUE,IAAI,kBAEd,EAFcC,QAEd,EAFcA,WAEd,EAFcA,MAEd,EAFc;QAAJD,IAAI,MAAJA,GAAIE,eAAJF;MAAI;;MAG7BH,UAAU,GAAGF,EAAE,CAACQ,KAAHR,CAASC,OAAO,IAAI,IAApBD,EAA0BK,IAA1BL,CAAbE;IACF;;IAEA,OAAOA,UAAP;EACD,CAPD;AAQF;AAEA,OAAO,SAASO,OAAT,CAAiBC,KAAjB,EAAiC;EACtC,IAAIC,MAAM,CAACC,SAAPD,CAAiBE,QAAjBF,CAA0BG,IAA1BH,CAA+BD,KAA/BC,MAA0C,gBAA9C,EAAgE;IAC9D,OAAO,IAAP;EACF;;EAEA,OAAOD,KAAK,YAAYK,KAAxB;AACF;AAEA,OAAO,SAASC,cAAT,CAAwBC,MAAxB,EAAyCC,QAAzC,EAAgE;EACrE,OAAOP,MAAM,CAACK,cAAPL,CAAsBG,IAAtBH,CAA2BM,MAA3BN,EAAmCO,QAAnCP,CAAP;AACF;AAEA,OAAO,SAASQ,aAAT,CAAuBF,MAAvB,EAAwCC,QAAxC,EAA+D;EACpE,OACEF,cAAc,CAACC,MAAD,EAASC,QAAT,CAAdF,IACA,CAAC9B,WAAW,CAAE+B,MAAM,CAAkCC,QAAlC,CAAR,CAFd;AAIF;AAQA,OAAO,SAASE,kBAAT,CAA4BC,MAA5B,EAA4C;EACjD,IAAI,CAACpC,QAAQ,CAACoC,MAAD,CAAb,EAAuB;IACrB,OAAOA,MAAP;EACF;;EACA,OAAOA,MAAM,CAACC,QAAPD,CAAgB,GAAhBA,IAAuBA,MAAM,CAACE,KAAPF,CAAa,CAAbA,EAAgB,CAAC,CAAjBA,CAAvBA,GAA6CA,MAApD;AACF;AAEA,OAAO,IAAMG,KAAK,GAAGC,QAAQ,CAACC,EAATD,KAAgB,KAA9B;AAEP,OAAO,IAAME,SAAS,GAAGF,QAAQ,CAACC,EAATD,KAAgB,SAAlC;AAEP,OAAO,SAASG,YAAT,CAAsBP,MAAtB,EAAsC;EAC3C,IAAI;IACF,OAAOA,MAAM,IAAIQ,IAAI,CAACC,KAALD,CAAWR,MAAXQ,CAAjB;EACD,CAFD,CAEE,OAAOE,SAAP,EAAkB;IAClB,OAAOV,MAAP;EACF;AACF;AAEA,OAAO,SAASW,gBAAT,CAA0BC,IAA1B,EAAyC;EAC9C,IAAI;IACF,OAAOJ,IAAI,CAACK,SAALL,CAAeI,IAAfJ,CAAP;EACD,CAFD,CAEE,OAAOE,SAAP,EAAkB;IAClB,OAAO,IAAP;EACF;AACF","names":["Base64","isString","isUndefined","ReferenceBase","getDataUrlParts","dataUrlString","isBase64","includes","split","mediaType","base64String","undefined","replace","decodeURIComponent","btoa","once","fn","context","onceResult","ranOnce","onceInner","args","_key","arguments","apply","isError","value","Object","prototype","toString","call","Error","hasOwnProperty","target","property","isPropertySet","stripTrailingSlash","string","endsWith","slice","isIOS","Platform","OS","isAndroid","tryJSONParse","JSON","parse","jsonError","tryJSONStringify","data","stringify"],"sources":["index.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { Platform } from 'react-native';\nimport * as Base64 from './Base64';\nimport { isString, isUndefined } from './validate';\n\nexport * from './id';\nexport * from './path';\nexport * from './promise';\nexport * from './validate';\n\nexport { Base64 };\nexport { ReferenceBase } from './ReferenceBase';\n\nexport function getDataUrlParts(dataUrlString: string) {\n  const isBase64 = dataUrlString.includes(';base64');\n  let [mediaType, base64String] = dataUrlString.split(',');\n  if (!mediaType || !base64String) {\n    return { base64String: undefined, mediaType: undefined };\n  }\n  mediaType = mediaType.replace('data:', '').replace(';base64', '');\n  if (base64String && base64String.includes('%')) {\n    base64String = decodeURIComponent(base64String);\n  }\n  if (!isBase64) {\n    base64String = Base64.btoa(base64String);\n  }\n  return { base64String, mediaType };\n}\n\nexport function once<T>(fn: () => void, context: unknown): (this: T, ...args: []) => void {\n  let onceResult: unknown;\n  let ranOnce = false;\n\n  return function onceInner(...args: []) {\n    if (!ranOnce) {\n      ranOnce = true;\n      onceResult = fn.apply(context || this, args);\n    }\n\n    return onceResult;\n  };\n}\n\nexport function isError(value: unknown) {\n  if (Object.prototype.toString.call(value) === '[object Error]') {\n    return true;\n  }\n\n  return value instanceof Error;\n}\n\nexport function hasOwnProperty(target: unknown, property: PropertyKey) {\n  return Object.hasOwnProperty.call(target, property);\n}\n\nexport function isPropertySet(target: unknown, property: PropertyKey) {\n  return (\n    hasOwnProperty(target, property) &&\n    !isUndefined((target as Record<PropertyKey, unknown>)[property])\n  );\n}\n\n/**\n * Remove a trailing forward slash from a string if it exists\n *\n * @param string\n * @returns {*}\n */\nexport function stripTrailingSlash(string: string) {\n  if (!isString(string)) {\n    return string;\n  }\n  return string.endsWith('/') ? string.slice(0, -1) : string;\n}\n\nexport const isIOS = Platform.OS === 'ios';\n\nexport const isAndroid = Platform.OS === 'android';\n\nexport function tryJSONParse(string: string) {\n  try {\n    return string && JSON.parse(string);\n  } catch (jsonError) {\n    return string;\n  }\n}\n\nexport function tryJSONStringify(data: unknown) {\n  try {\n    return JSON.stringify(data);\n  } catch (jsonError) {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}