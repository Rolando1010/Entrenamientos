{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useState } from \"react\";\nimport DropDown from \"../components/drop-down\";\nimport { LineGraph } from \"../components/graphs\";\nimport { getCategories, getExercisesCategory } from \"../services/categories\";\nimport { getRMsExercise } from \"../services/exercises\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar statisticsOptions = [\"1RM Estimado\", \"Máximo peso\", \"Máximas repeticiones\"];\n\nvar Statistics = function Statistics() {\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      optionSelected = _useState2[0],\n      setOptionSelected = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      categories = _useState4[0],\n      setCategories = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      categorySelected = _useState6[0],\n      setCategorySelected = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      exercises = _useState8[0],\n      setExercises = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      exerciseSelected = _useState10[0],\n      setExerciseSelected = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      graphData = _useState12[0],\n      setGraphData = _useState12[1];\n\n  useEffect(function () {\n    getCategories().then(setCategories);\n  }, []);\n  useEffect(function () {\n    if (categorySelected) {\n      getExercisesCategory(categorySelected).then(setExercises);\n    }\n  }, [categorySelected]);\n  useEffect(function () {\n    if (exerciseSelected) {\n      getRMsExercise(exerciseSelected).then(function (_ref) {\n        var days = _ref.days,\n            rms = _ref.rms;\n        console.log(days, rms);\n        setGraphData({\n          x: days,\n          y: rms\n        });\n      });\n    }\n  }, [exerciseSelected]);\n  return _jsxs(_Fragment, {\n    children: [_jsx(DropDown, {\n      value: optionSelected,\n      onChange: setOptionSelected,\n      options: statisticsOptions,\n      emptyStartMessage: \"Seleccione una opci\\xF3n\"\n    }), optionSelected && _jsx(DropDown, {\n      value: categorySelected,\n      onChange: setCategorySelected,\n      options: categories,\n      emptyStartMessage: \"Seleccione una categor\\xEDa\"\n    }), categorySelected && _jsx(DropDown, {\n      value: exerciseSelected,\n      onChange: setExerciseSelected,\n      options: exercises,\n      emptyStartMessage: \"Seleccione un ejercicio\"\n    }), graphData && _jsx(LineGraph, {\n      x: graphData.x,\n      y: graphData.y\n    })]\n  });\n};\n\nexport default Statistics;","map":{"version":3,"names":["useEffect","useState","DropDown","LineGraph","getCategories","getExercisesCategory","getRMsExercise","statisticsOptions","Statistics","optionSelected","setOptionSelected","categories","setCategories","categorySelected","setCategorySelected","exercises","setExercises","exerciseSelected","setExerciseSelected","graphData","setGraphData","then","days","rms","console","log","x","y"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/screens/statistics.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport DropDown from \"../components/drop-down\";\r\nimport { LineGraph } from \"../components/graphs\";\r\nimport { getCategories, getExercisesCategory } from \"../services/categories\";\r\nimport { getRMsExercise } from \"../services/exercises\";\r\n\r\nconst statisticsOptions = [\r\n    \"1RM Estimado\",\r\n    \"Máximo peso\",\r\n    \"Máximas repeticiones\"\r\n];\r\n\r\nconst Statistics = () => {\r\n    const [optionSelected, setOptionSelected] = useState();\r\n    const [categories, setCategories] = useState([]);\r\n    const [categorySelected, setCategorySelected] = useState();\r\n    const [exercises, setExercises] = useState([]);\r\n    const [exerciseSelected, setExerciseSelected] = useState();\r\n    const [graphData, setGraphData] = useState();\r\n\r\n    useEffect(() => {\r\n        getCategories().then(setCategories);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if(categorySelected){\r\n            getExercisesCategory(categorySelected).then(setExercises);\r\n        }\r\n    }, [categorySelected]);\r\n\r\n    useEffect(() => {\r\n        if(exerciseSelected){\r\n            getRMsExercise(exerciseSelected).then(({ days, rms }) => {\r\n                console.log(days, rms);\r\n                setGraphData({x: days, y: rms});\r\n            });\r\n        }\r\n    }, [exerciseSelected]);\r\n\r\n    return (<>\r\n        <DropDown\r\n            value={optionSelected}\r\n            onChange={setOptionSelected}\r\n            options={statisticsOptions}\r\n            emptyStartMessage=\"Seleccione una opción\"\r\n        />\r\n        {optionSelected && <DropDown\r\n            value={categorySelected}\r\n            onChange={setCategorySelected}\r\n            options={categories}\r\n            emptyStartMessage=\"Seleccione una categoría\"\r\n        />}\r\n        {categorySelected && <DropDown\r\n            value={exerciseSelected}\r\n            onChange={setExerciseSelected}\r\n            options={exercises}\r\n            emptyStartMessage=\"Seleccione un ejercicio\"\r\n        />}\r\n        {graphData && <LineGraph x={graphData.x} y={graphData.y}/>}\r\n    </>);\r\n}\r\n\r\nexport default Statistics;"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,QAAP;AACA,SAASC,SAAT;AACA,SAASC,aAAT,EAAwBC,oBAAxB;AACA,SAASC,cAAT;;;;AAEA,IAAMC,iBAAiB,GAAG,CACtB,cADsB,EAEtB,aAFsB,EAGtB,sBAHsB,CAA1B;;AAMA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EACrB,gBAA4CP,QAAQ,EAApD;EAAA;EAAA,IAAOQ,cAAP;EAAA,IAAuBC,iBAAvB;;EACA,iBAAoCT,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOU,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAgDX,QAAQ,EAAxD;EAAA;EAAA,IAAOY,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,iBAAkCb,QAAQ,CAAC,EAAD,CAA1C;EAAA;EAAA,IAAOc,SAAP;EAAA,IAAkBC,YAAlB;;EACA,iBAAgDf,QAAQ,EAAxD;EAAA;EAAA,IAAOgB,gBAAP;EAAA,IAAyBC,mBAAzB;;EACA,kBAAkCjB,QAAQ,EAA1C;EAAA;EAAA,IAAOkB,SAAP;EAAA,IAAkBC,YAAlB;;EAEApB,SAAS,CAAC,YAAM;IACZI,aAAa,GAAGiB,IAAhB,CAAqBT,aAArB;EACH,CAFQ,EAEN,EAFM,CAAT;EAIAZ,SAAS,CAAC,YAAM;IACZ,IAAGa,gBAAH,EAAoB;MAChBR,oBAAoB,CAACQ,gBAAD,CAApB,CAAuCQ,IAAvC,CAA4CL,YAA5C;IACH;EACJ,CAJQ,EAIN,CAACH,gBAAD,CAJM,CAAT;EAMAb,SAAS,CAAC,YAAM;IACZ,IAAGiB,gBAAH,EAAoB;MAChBX,cAAc,CAACW,gBAAD,CAAd,CAAiCI,IAAjC,CAAsC,gBAAmB;QAAA,IAAhBC,IAAgB,QAAhBA,IAAgB;QAAA,IAAVC,GAAU,QAAVA,GAAU;QACrDC,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAAkBC,GAAlB;QACAH,YAAY,CAAC;UAACM,CAAC,EAAEJ,IAAJ;UAAUK,CAAC,EAAEJ;QAAb,CAAD,CAAZ;MACH,CAHD;IAIH;EACJ,CAPQ,EAON,CAACN,gBAAD,CAPM,CAAT;EASA,OAAQ;IAAA,WACJ,KAAC,QAAD;MACI,KAAK,EAAER,cADX;MAEI,QAAQ,EAAEC,iBAFd;MAGI,OAAO,EAAEH,iBAHb;MAII,iBAAiB,EAAC;IAJtB,EADI,EAOHE,cAAc,IAAI,KAAC,QAAD;MACf,KAAK,EAAEI,gBADQ;MAEf,QAAQ,EAAEC,mBAFK;MAGf,OAAO,EAAEH,UAHM;MAIf,iBAAiB,EAAC;IAJH,EAPf,EAaHE,gBAAgB,IAAI,KAAC,QAAD;MACjB,KAAK,EAAEI,gBADU;MAEjB,QAAQ,EAAEC,mBAFO;MAGjB,OAAO,EAAEH,SAHQ;MAIjB,iBAAiB,EAAC;IAJD,EAbjB,EAmBHI,SAAS,IAAI,KAAC,SAAD;MAAW,CAAC,EAAEA,SAAS,CAACO,CAAxB;MAA2B,CAAC,EAAEP,SAAS,CAACQ;IAAxC,EAnBV;EAAA,EAAR;AAqBH,CAhDD;;AAkDA,eAAenB,UAAf"},"metadata":{},"sourceType":"module"}