{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useMemo, useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useParams } from \"react-router-native\";\nimport Button from \"../components/button\";\nimport { exerciseStyles } from \"../styles/pages\";\nimport useExercises from \"../hooks/useExercises\";\nimport Table from \"../components/table\";\nimport { ListIcon, TrashIcon } from \"../components/icons\";\nimport { NumberInput } from \"../components/input\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar defaultValues = {\n  weight: 0,\n  reps: 0\n};\n\nvar Exercise = function Exercise() {\n  var _useParams = useParams(),\n      exerciseName = _useParams.exerciseName;\n\n  var _useState = useState(defaultValues),\n      _useState2 = _slicedToArray(_useState, 2),\n      values = _useState2[0],\n      setValues = _useState2[1];\n\n  var _useExercises = useExercises(),\n      addExercise = _useExercises.addExercise;\n\n  var handleChange = function handleChange(key) {\n    return function (eventValue) {\n      setValues(_objectSpread(_objectSpread({}, values), {}, _defineProperty({}, key, eventValue)));\n    };\n  };\n\n  return _jsxs(_Fragment, {\n    children: [_jsxs(View, {\n      style: exerciseStyles.header,\n      children: [_jsx(Text, {\n        style: exerciseStyles.title,\n        children: exerciseName\n      }), _jsx(ExerciseHistory, {})]\n    }), _jsx(NumberInput, {\n      value: values.weight,\n      onChange: handleChange(\"weight\"),\n      text: \"Peso (kgs)\",\n      step: .5\n    }), _jsx(NumberInput, {\n      value: values.reps,\n      onChange: handleChange(\"reps\"),\n      text: \"Repeticiones\",\n      step: 1\n    }), _jsx(Button, {\n      type: \"success1\",\n      onPress: addExercise(values),\n      children: \"Guardar\"\n    }), _jsx(Button, {\n      type: \"secondary1\",\n      onPress: function onPress() {\n        return setValues(defaultValues);\n      },\n      children: \"Limpiar\"\n    }), _jsx(DayExerciseSeries, {})]\n  });\n};\n\nvar DayExerciseSeries = function DayExerciseSeries() {\n  var _useParams2 = useParams(),\n      exerciseName = _useParams2.exerciseName;\n\n  var _useExercises2 = useExercises(),\n      dayExercises = _useExercises2.dayExercises,\n      deleteSerie = _useExercises2.deleteSerie;\n\n  var series = useMemo(function () {\n    var _dayExercises$find;\n\n    return ((_dayExercises$find = dayExercises.find(function (e) {\n      return e.name === exerciseName;\n    })) == null ? void 0 : _dayExercises$find.series) || [];\n  }, [dayExercises]);\n  return _jsx(Table, {\n    data: series.map(function (_ref, index) {\n      var weight = _ref.weight,\n          reps = _ref.reps;\n      return [weight + \" kgs\", reps + \" reps\", _jsx(TouchableOpacity, {\n        onPress: deleteSerie(index),\n        children: _jsx(TrashIcon, {})\n      })];\n    }),\n    rowStyle: exerciseStyles.serie\n  });\n};\n\nvar ExerciseHistory = function ExerciseHistory() {\n  return _jsx(TouchableOpacity, {\n    children: _jsx(ListIcon, {})\n  });\n};\n\nexport default Exercise;","map":{"version":3,"names":["useMemo","useState","useParams","Button","exerciseStyles","useExercises","Table","ListIcon","TrashIcon","NumberInput","defaultValues","weight","reps","Exercise","exerciseName","values","setValues","addExercise","handleChange","key","eventValue","header","title","DayExerciseSeries","dayExercises","deleteSerie","series","find","e","name","map","index","serie","ExerciseHistory"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/screens/exercise.jsx"],"sourcesContent":["import { useMemo, useState } from \"react\";\r\nimport { Text, TouchableOpacity, View } from \"react-native\";\r\nimport { useParams } from \"react-router-native\";\r\nimport Button from \"../components/button\";\r\nimport { exerciseStyles } from \"../styles/pages\";\r\nimport useExercises from \"../hooks/useExercises\";\r\nimport Table from \"../components/table\";\r\nimport { ListIcon, TrashIcon } from \"../components/icons\";\r\nimport { NumberInput } from \"../components/input\";\r\n\r\nconst defaultValues = {\r\n    weight: 0,\r\n    reps: 0\r\n};\r\n\r\nconst Exercise = () => {\r\n    const { exerciseName } = useParams();\r\n    const [values, setValues] = useState(defaultValues);\r\n    const { addExercise } = useExercises();\r\n\r\n    const handleChange = (key) => (eventValue) => {\r\n        setValues({...values, [key]: eventValue});\r\n    }\r\n\r\n    return (<>\r\n        <View style={exerciseStyles.header}>\r\n            <Text style={exerciseStyles.title}>{exerciseName}</Text>\r\n            <ExerciseHistory/>\r\n        </View>\r\n        <NumberInput\r\n            value={values.weight}\r\n            onChange={handleChange(\"weight\")}\r\n            text=\"Peso (kgs)\"\r\n            step={.5}\r\n        />\r\n        <NumberInput\r\n            value={values.reps}\r\n            onChange={handleChange(\"reps\")}\r\n            text=\"Repeticiones\"\r\n            step={1}\r\n        />\r\n        <Button type=\"success1\" onPress={addExercise(values)}>Guardar</Button>\r\n        <Button type=\"secondary1\" onPress={() => setValues(defaultValues)}>Limpiar</Button>\r\n        <DayExerciseSeries/>\r\n    </>);\r\n}\r\n\r\nconst DayExerciseSeries = () => {\r\n    const { exerciseName } = useParams();\r\n    const { dayExercises, deleteSerie } = useExercises();\r\n\r\n    const series = useMemo(() => dayExercises.find(e => e.name === exerciseName)?.series || [], [dayExercises]);\r\n\r\n    return (\r\n        <Table\r\n            data={series.map(({weight, reps}, index) => [\r\n                `${weight} kgs`,\r\n                `${reps} reps`,\r\n                <TouchableOpacity onPress={deleteSerie(index)}>\r\n                    <TrashIcon/>\r\n                </TouchableOpacity>\r\n            ])}\r\n            rowStyle={exerciseStyles.serie}\r\n        />\r\n    );\r\n}\r\n\r\nconst ExerciseHistory = () => {\r\n    return (\r\n        <TouchableOpacity>\r\n            <ListIcon/>\r\n        </TouchableOpacity>\r\n    );\r\n}\r\n\r\nexport default Exercise;"],"mappings":"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"},"metadata":{},"sourceType":"module"}