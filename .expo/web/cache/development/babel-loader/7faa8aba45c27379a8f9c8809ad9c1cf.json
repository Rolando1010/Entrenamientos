{"ast":null,"code":"import { isFunction } from \"./validate\";\nexport function promiseDefer() {\n  var deferred = {\n    promise: null,\n    resolve: function resolve() {},\n    reject: function reject() {}\n  };\n  deferred.promise = new Promise(function (resolve, reject) {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n  return deferred;\n}\nexport function promiseWithOptionalCallback(promise, callback) {\n  if (!isFunction(callback)) {\n    return promise;\n  }\n\n  return promise.then(function (result) {\n    if (callback && callback.length === 1) {\n      callback(null);\n    } else if (callback) {\n      callback(null, result);\n    }\n\n    return result;\n  }).catch(function (error) {\n    if (callback) {\n      callback(error);\n    }\n\n    return Promise.reject(error);\n  });\n}","map":{"version":3,"mappings":"AAiBA,SAASA,UAAT;AAKA,OAAO,SAASC,YAAT,GAAwB;EAC7B,IAAMC,QAIL,GAAG;IAAEC,OAAO,EAAE,IAAX;IAAiBC,OAAO,EAAE,mBAAM,CAAE,CAAlC;IAAoCC,MAAM,EAAE,kBAAM,CAAC;EAAnD,CAJJ;EAMAH,QAAQ,CAACC,OAATD,GAAmB,IAAII,OAAJ,CAAY,UAACF,OAAD,EAAUC,MAAV,EAAqB;IAClDH,QAAQ,CAACE,OAATF,GAAmBE,OAAnBF;IACAA,QAAQ,CAACG,MAATH,GAAkBG,MAAlBH;EACD,CAHkB,CAAnBA;EAKA,OAAOA,QAAP;AACF;AAMA,OAAO,SAASK,2BAAT,CACLJ,OADK,EAELK,QAFK,EAGL;EACA,IAAI,CAACR,UAAU,CAACQ,QAAD,CAAf,EAA2B;IACzB,OAAOL,OAAP;EACF;;EAEA,OAAOA,OAAO,CACXM,IADIN,CACCO,gBAAM,EAAI;IACd,IAAIF,QAAQ,IAAIA,QAAQ,CAACG,MAATH,KAAoB,CAApC,EAAuC;MACrCA,QAAQ,CAAC,IAAD,CAARA;IACD,CAFD,MAEO,IAAIA,QAAJ,EAAc;MACnBA,QAAQ,CAAC,IAAD,EAAOE,MAAP,CAARF;IACF;;IAEA,OAAOE,MAAP;EACD,CATIP,EAUJS,KAVIT,CAUEU,eAAK,EAAI;IACd,IAAIL,QAAJ,EAAc;MACZA,QAAQ,CAACK,KAAD,CAARL;IACF;;IACA,OAAOF,OAAO,CAACD,MAARC,CAAeO,KAAfP,CAAP;EACD,CAfIH,CAAP;AAgBF","names":["isFunction","promiseDefer","deferred","promise","resolve","reject","Promise","promiseWithOptionalCallback","callback","then","result","length","catch","error"],"sources":["promise.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isFunction } from './validate';\n\n/**\n *\n */\nexport function promiseDefer() {\n  const deferred: {\n    promise: Promise<unknown> | null;\n    resolve: (value: unknown) => void;\n    reject: (value: unknown) => void;\n  } = { promise: null, resolve: () => {}, reject: () => {} };\n\n  deferred.promise = new Promise((resolve, reject) => {\n    deferred.resolve = resolve;\n    deferred.reject = reject;\n  });\n\n  return deferred;\n}\n\n/**\n * @param promise\n * @param callback\n */\nexport function promiseWithOptionalCallback(\n  promise: Promise<unknown>,\n  callback: (a: unknown, b?: unknown) => void,\n) {\n  if (!isFunction(callback)) {\n    return promise;\n  }\n\n  return promise\n    .then(result => {\n      if (callback && callback.length === 1) {\n        callback(null);\n      } else if (callback) {\n        callback(null, result);\n      }\n\n      return result;\n    })\n    .catch(error => {\n      if (callback) {\n        callback(error);\n      }\n      return Promise.reject(error);\n    });\n}\n"]},"metadata":{},"sourceType":"module"}