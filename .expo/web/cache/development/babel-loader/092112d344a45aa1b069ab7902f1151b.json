{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nvar get = function get(key) {\n  return new Promise(function (resolve) {\n    return AsyncStorage.getItem(key).then(function (data) {\n      resolve(JSON.parse(data));\n    });\n  });\n};\n\nvar set = function set(key, value) {\n  return AsyncStorage.setItem(key, JSON.stringify(value));\n};\n\nvar deleteKey = AsyncStorage.removeItem;\nvar getAllKeys = AsyncStorage.getAllKeys;\n\nvar getMany = function getMany(keys) {\n  return new Promise(function (resolve) {\n    AsyncStorage.multiGet(keys).then(function (data) {\n      resolve(data.reduce(function (acc, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        acc[key] = JSON.parse(value);\n        return acc;\n      }, {}));\n    });\n  });\n};\n\nvar getAll = function getAll() {\n  return new Promise(function (resolve) {\n    getAllKeys().then(function (keys) {\n      getMany(keys).then(resolve);\n    });\n  });\n};\n\nvar storage = {\n  get: get,\n  set: set,\n  delete: deleteKey,\n  getAllKeys: getAllKeys,\n  getMany: getMany,\n  getAll: getAll\n};\nexport default storage;","map":{"version":3,"names":["AsyncStorage","get","key","Promise","resolve","getItem","then","data","JSON","parse","set","value","setItem","stringify","deleteKey","removeItem","getAllKeys","getMany","keys","multiGet","reduce","acc","getAll","storage","delete"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/utils/storage.js"],"sourcesContent":["import AsyncStorage from \"@react-native-async-storage/async-storage\";\r\n\r\nconst get = (key) => new Promise(resolve => AsyncStorage.getItem(key).then(data => {\r\n    resolve(JSON.parse(data));\r\n}));\r\n\r\nconst set = (key, value) => AsyncStorage.setItem(key, JSON.stringify(value));\r\n\r\nconst deleteKey = AsyncStorage.removeItem;\r\n\r\nconst { getAllKeys } = AsyncStorage;\r\n\r\nconst getMany = (keys) => new Promise(resolve => {\r\n    AsyncStorage.multiGet(keys).then(data => {\r\n        resolve(data.reduce((acc, [key, value]) => {\r\n            acc[key] = JSON.parse(value);\r\n            return acc;\r\n        }, {}));\r\n    });\r\n});\r\n\r\nconst getAll = () => new Promise(resolve => {\r\n    getAllKeys().then(keys => {\r\n        getMany(keys).then(resolve);\r\n    });\r\n});\r\n\r\nconst storage = {\r\n    get,\r\n    set,\r\n    delete: deleteKey,\r\n    getAllKeys,\r\n    getMany,\r\n    getAll\r\n};\r\n\r\nexport default storage;"],"mappings":";AAAA,OAAOA,YAAP,MAAyB,2CAAzB;;AAEA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD;EAAA,OAAS,IAAIC,OAAJ,CAAY,UAAAC,OAAO;IAAA,OAAIJ,YAAY,CAACK,OAAb,CAAqBH,GAArB,EAA0BI,IAA1B,CAA+B,UAAAC,IAAI,EAAI;MAC/EH,OAAO,CAACI,IAAI,CAACC,KAAL,CAAWF,IAAX,CAAD,CAAP;IACH,CAF2C,CAAJ;EAAA,CAAnB,CAAT;AAAA,CAAZ;;AAIA,IAAMG,GAAG,GAAG,SAANA,GAAM,CAACR,GAAD,EAAMS,KAAN;EAAA,OAAgBX,YAAY,CAACY,OAAb,CAAqBV,GAArB,EAA0BM,IAAI,CAACK,SAAL,CAAeF,KAAf,CAA1B,CAAhB;AAAA,CAAZ;;AAEA,IAAMG,SAAS,GAAGd,YAAY,CAACe,UAA/B;AAEA,IAAQC,UAAR,GAAuBhB,YAAvB,CAAQgB,UAAR;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD;EAAA,OAAU,IAAIf,OAAJ,CAAY,UAAAC,OAAO,EAAI;IAC7CJ,YAAY,CAACmB,QAAb,CAAsBD,IAAtB,EAA4BZ,IAA5B,CAAiC,UAAAC,IAAI,EAAI;MACrCH,OAAO,CAACG,IAAI,CAACa,MAAL,CAAY,UAACC,GAAD,QAAuB;QAAA;QAAA,IAAhBnB,GAAgB;QAAA,IAAXS,KAAW;;QACvCU,GAAG,CAACnB,GAAD,CAAH,GAAWM,IAAI,CAACC,KAAL,CAAWE,KAAX,CAAX;QACA,OAAOU,GAAP;MACH,CAHO,EAGL,EAHK,CAAD,CAAP;IAIH,CALD;EAMH,CAPyB,CAAV;AAAA,CAAhB;;AASA,IAAMC,MAAM,GAAG,SAATA,MAAS;EAAA,OAAM,IAAInB,OAAJ,CAAY,UAAAC,OAAO,EAAI;IACxCY,UAAU,GAAGV,IAAb,CAAkB,UAAAY,IAAI,EAAI;MACtBD,OAAO,CAACC,IAAD,CAAP,CAAcZ,IAAd,CAAmBF,OAAnB;IACH,CAFD;EAGH,CAJoB,CAAN;AAAA,CAAf;;AAMA,IAAMmB,OAAO,GAAG;EACZtB,GAAG,EAAHA,GADY;EAEZS,GAAG,EAAHA,GAFY;EAGZc,MAAM,EAAEV,SAHI;EAIZE,UAAU,EAAVA,UAJY;EAKZC,OAAO,EAAPA,OALY;EAMZK,MAAM,EAANA;AANY,CAAhB;AASA,eAAeC,OAAf"},"metadata":{},"sourceType":"module"}