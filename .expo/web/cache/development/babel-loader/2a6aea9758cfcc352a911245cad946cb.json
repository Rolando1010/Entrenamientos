{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nexport var NativeError = function (_Error) {\n  _inherits(NativeError, _Error);\n\n  var _super = _createSuper(NativeError);\n\n  function NativeError(nativeError, jsStack, namespace) {\n    var _this;\n\n    _classCallCheck(this, NativeError);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"namespace\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"code\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"message\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"jsStack\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"userInfo\", void 0);\n\n    var userInfo = nativeError.userInfo;\n    _this.namespace = namespace;\n    _this.code = _this.namespace + \"/\" + (userInfo.code || 'unknown');\n    _this.message = \"[\" + _this.code + \"] \" + userInfo.message;\n    _this.jsStack = jsStack;\n    _this.userInfo = userInfo;\n    _this.stack = NativeError.getStackWithMessage(\"NativeError: \" + _this.message, _this.jsStack);\n    return _this;\n  }\n\n  _createClass(NativeError, null, [{\n    key: \"fromEvent\",\n    value: function fromEvent(errorEvent, namespace, stack) {\n      return new NativeError({\n        userInfo: errorEvent\n      }, stack || new Error().stack || '', namespace);\n    }\n  }, {\n    key: \"getStackWithMessage\",\n    value: function getStackWithMessage(message, jsStack) {\n      return [message].concat(_toConsumableArray(jsStack.split('\\n').slice(2, 13))).join('\\n');\n    }\n  }]);\n\n  return NativeError;\n}(_wrapNativeSuper(Error));","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,WAAaA,WAAb;EAAA;;EAAA;;EAeEC,qBACEC,WADFD,EAEEE,OAFFF,EAGEG,SAHFH,EAIE;IAAA;;IAAA;;IACA;;IAAQI;;IAAAA;;IAAAA;;IAAAA;;IAAAA;;IACR,IAAQC,QAAR,GAAqBJ,WAArB,CAAQI,QAAR;IACA,MAAKF,SAAL,GAAiBA,SAAjB;IACA,MAAKG,IAAL,GAAe,MAAKH,SAApB,UAAiCE,QAAQ,CAACC,IAATD,IAAiB,SAAlD;IACA,MAAKE,OAAL,SAAmB,MAAKD,IAAxB,UAAiCD,QAAQ,CAACE,OAA1C;IACA,MAAKL,OAAL,GAAeA,OAAf;IACA,MAAKG,QAAL,GAAgBA,QAAhB;IACA,MAAKG,KAAL,GAAaT,WAAW,CAACU,mBAAZV,mBAAgD,MAAKQ,OAArDR,EAAgE,MAAKG,OAArEH,CAAb;IARA;EASF;;EA5BF;IAAA;IAAA,OAOE,mBACEW,UADF,EAEEP,SAFF,EAGEK,KAHF,EAIE;MACA,OAAO,IAAIT,WAAJ,CAAgB;QAAEM,QAAQ,EAAEK;MAAZ,CAAhB,EAA0CF,KAAK,IAAI,IAAIG,KAAJ,GAAYH,KAArBA,IAA8B,EAAxE,EAA4EL,SAA5E,CAAP;IACF;EAbF;IAAA;IAAA,OAmCE,6BAA2BI,OAA3B,EAA4CL,OAA5C,EAA6D;MAC3D,OAAO,CAACK,OAAD,4BAAaL,OAAO,CAACU,KAARV,CAAc,IAAdA,EAAoBW,KAApBX,CAA0B,CAA1BA,EAA6B,EAA7BA,CAAb,GAA+CY,IAA/C,CAAoD,IAApD,CAAP;IACF;EArCF;;EAAA;AAAA,mBAAiCH,KAAjC","names":["NativeError","constructor","nativeError","jsStack","namespace","_defineProperty","userInfo","code","message","stack","getStackWithMessage","errorEvent","Error","split","slice","join"],"sources":["NativeError.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nexport class NativeError extends Error {\n  namespace: string;\n  code: string;\n  message: string;\n  jsStack: string;\n  userInfo: { code: string; message: string };\n\n  static fromEvent(\n    errorEvent: { code: string; message: string },\n    namespace: string,\n    stack?: string,\n  ) {\n    return new NativeError({ userInfo: errorEvent }, stack || new Error().stack || '', namespace);\n  }\n\n  constructor(\n    nativeError: { userInfo: { code: string; message: string } },\n    jsStack: string,\n    namespace: string,\n  ) {\n    super();\n    const { userInfo } = nativeError;\n    this.namespace = namespace;\n    this.code = `${this.namespace}/${userInfo.code || 'unknown'}`;\n    this.message = `[${this.code}] ${userInfo.message}`;\n    this.jsStack = jsStack;\n    this.userInfo = userInfo;\n    this.stack = NativeError.getStackWithMessage(`NativeError: ${this.message}`, this.jsStack);\n  }\n\n  /**\n   * Build a stack trace that includes JS stack prior to calling the native method.\n   *\n   * @returns {string}\n   */\n  static getStackWithMessage(message: string, jsStack: string) {\n    return [message, ...jsStack.split('\\n').slice(2, 13)].join('\\n');\n  }\n}\n"]},"metadata":{},"sourceType":"module"}