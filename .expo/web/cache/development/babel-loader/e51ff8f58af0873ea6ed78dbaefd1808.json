{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button, { IconButton } from \"../components/button\";\nimport { PlusIcon } from \"../components/icons\";\nimport { LabelInput } from \"../components/input\";\nimport ListItem from \"../components/list-item\";\nimport Modal from \"../components/modal\";\nimport { errorToast, infoToast, successToast } from \"../components/toast\";\nimport { getCategories, saveCategory, removeCategory } from \"../services/categories\";\nimport { listItemStyle } from \"../styles/components\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Categories = function Categories() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      name = _useState4[0],\n      setName = _useState4[1];\n\n  var modalRef = useRef();\n\n  var updateCategories = function updateCategories() {\n    getCategories().then(setCategories);\n  };\n\n  var addCategory = function addCategory() {\n    saveCategory(name).then(function () {\n      updateCategories();\n      modalRef.close();\n      setName(\"\");\n      successToast(\"Categoría añadida\");\n    }).catch(errorToast);\n  };\n\n  var deleteCategory = function deleteCategory(categoryName) {\n    return function () {\n      removeCategory(categoryName).then(function () {\n        updateCategories();\n        infoToast(\"Categoría eliminada\");\n      });\n    };\n  };\n\n  useEffect(updateCategories, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: listItemStyle.container,\n      children: _jsx(IconButton, {\n        icon: _jsx(PlusIcon, {}),\n        onPress: function onPress() {\n          return modalRef.open();\n        },\n        children: \"A\\xF1adir categor\\xEDa\"\n      })\n    }), categories.map(function (category, index) {\n      return _jsx(ListItem, {\n        text: category,\n        url: \"/categories/\" + category + \"/exercises\",\n        deletion: deleteCategory(category)\n      }, \"category-\" + index);\n    }), _jsx(Modal, {\n      title: \"Nueva categor\\xEDa\",\n      footerElement: _jsx(Button, {\n        onPress: addCategory,\n        children: \"A\\xF1adir\"\n      }),\n      modalRef: modalRef,\n      children: _jsx(LabelInput, {\n        text: \"Nombre de categor\\xEDa\",\n        containerStyle: {\n          width: \"100%\",\n          marginTop: 8\n        },\n        value: name,\n        onChange: setName,\n        autoFocus: true\n      })\n    })]\n  });\n};\n\nexport default Categories;","map":{"version":3,"names":["useEffect","useRef","useState","Button","IconButton","PlusIcon","LabelInput","ListItem","Modal","errorToast","infoToast","successToast","getCategories","saveCategory","removeCategory","listItemStyle","Categories","categories","setCategories","name","setName","modalRef","updateCategories","then","addCategory","close","catch","deleteCategory","categoryName","container","open","map","category","index","width","marginTop"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/screens/categories.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport Button, { IconButton } from \"../components/button\";\r\nimport { PlusIcon } from \"../components/icons\";\r\nimport { LabelInput } from \"../components/input\";\r\nimport ListItem from \"../components/list-item\";\r\nimport Modal from \"../components/modal\";\r\nimport { errorToast, infoToast, successToast } from \"../components/toast\";\r\nimport { getCategories, saveCategory, removeCategory } from \"../services/categories\";\r\nimport { listItemStyle } from \"../styles/components\";\r\n\r\nconst Categories = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const [name, setName] = useState(\"\");\r\n    const modalRef = useRef();\r\n\r\n    const updateCategories = () => {\r\n        getCategories().then(setCategories);\r\n    }\r\n\r\n    const addCategory = () => {\r\n        saveCategory(name)\r\n        .then(() => {\r\n            updateCategories();\r\n            modalRef.close();\r\n            setName(\"\");\r\n            successToast(\"Categoría añadida\");\r\n        })\r\n        .catch(errorToast);\r\n    }\r\n\r\n    const deleteCategory = categoryName => () => {\r\n        removeCategory(categoryName).then(() => {\r\n            updateCategories();\r\n            infoToast(\"Categoría eliminada\");\r\n        });\r\n    }\r\n\r\n    useEffect(updateCategories, []);\r\n\r\n    return (<>\r\n        <View style={listItemStyle.container}>\r\n            <IconButton icon={<PlusIcon/>} onPress={() => modalRef.open()}>\r\n                Añadir categoría\r\n            </IconButton>\r\n        </View>\r\n        {categories.map((category, index) =>\r\n            <ListItem\r\n                key={`category-${index}`}\r\n                text={category}\r\n                url={`/categories/${category}/exercises`}\r\n                deletion={deleteCategory(category)}\r\n            />\r\n        )}\r\n        <Modal\r\n            title=\"Nueva categoría\"\r\n            footerElement={\r\n                <Button onPress={addCategory}>\r\n                    Añadir\r\n                </Button>\r\n            }\r\n            modalRef={modalRef}\r\n        >\r\n            <LabelInput\r\n                text=\"Nombre de categoría\"\r\n                containerStyle={{width: \"100%\", marginTop: 8}}\r\n                value={name}\r\n                onChange={setName}\r\n                autoFocus\r\n            />\r\n        </Modal>\r\n    </>);\r\n}\r\n\r\nexport default Categories;"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAEA,OAAOC,MAAP,IAAiBC,UAAjB;AACA,SAASC,QAAT;AACA,SAASC,UAAT;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC;AACA,SAASC,aAAT,EAAwBC,YAAxB,EAAsCC,cAAtC;AACA,SAASC,aAAT;;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EACrB,gBAAoCd,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOe,UAAP;EAAA,IAAmBC,aAAnB;;EACA,iBAAwBhB,QAAQ,CAAC,EAAD,CAAhC;EAAA;EAAA,IAAOiB,IAAP;EAAA,IAAaC,OAAb;;EACA,IAAMC,QAAQ,GAAGpB,MAAM,EAAvB;;EAEA,IAAMqB,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;IAC3BV,aAAa,GAAGW,IAAhB,CAAqBL,aAArB;EACH,CAFD;;EAIA,IAAMM,WAAW,GAAG,SAAdA,WAAc,GAAM;IACtBX,YAAY,CAACM,IAAD,CAAZ,CACCI,IADD,CACM,YAAM;MACRD,gBAAgB;MAChBD,QAAQ,CAACI,KAAT;MACAL,OAAO,CAAC,EAAD,CAAP;MACAT,YAAY,CAAC,mBAAD,CAAZ;IACH,CAND,EAOCe,KAPD,CAOOjB,UAPP;EAQH,CATD;;EAWA,IAAMkB,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,YAAY;IAAA,OAAI,YAAM;MACzCd,cAAc,CAACc,YAAD,CAAd,CAA6BL,IAA7B,CAAkC,YAAM;QACpCD,gBAAgB;QAChBZ,SAAS,CAAC,qBAAD,CAAT;MACH,CAHD;IAIH,CALkC;EAAA,CAAnC;;EAOAV,SAAS,CAACsB,gBAAD,EAAmB,EAAnB,CAAT;EAEA,OAAQ;IAAA,WACJ,KAAC,IAAD;MAAM,KAAK,EAAEP,aAAa,CAACc,SAA3B;MAAA,UACI,KAAC,UAAD;QAAY,IAAI,EAAE,KAAC,QAAD,KAAlB;QAA+B,OAAO,EAAE;UAAA,OAAMR,QAAQ,CAACS,IAAT,EAAN;QAAA,CAAxC;QAAA;MAAA;IADJ,EADI,EAMHb,UAAU,CAACc,GAAX,CAAe,UAACC,QAAD,EAAWC,KAAX;MAAA,OACZ,KAAC,QAAD;QAEI,IAAI,EAAED,QAFV;QAGI,GAAG,mBAAiBA,QAAjB,eAHP;QAII,QAAQ,EAAEL,cAAc,CAACK,QAAD;MAJ5B,iBACqBC,KADrB,CADY;IAAA,CAAf,CANG,EAcJ,KAAC,KAAD;MACI,KAAK,EAAC,oBADV;MAEI,aAAa,EACT,KAAC,MAAD;QAAQ,OAAO,EAAET,WAAjB;QAAA;MAAA,EAHR;MAOI,QAAQ,EAAEH,QAPd;MAAA,UASI,KAAC,UAAD;QACI,IAAI,EAAC,wBADT;QAEI,cAAc,EAAE;UAACa,KAAK,EAAE,MAAR;UAAgBC,SAAS,EAAE;QAA3B,CAFpB;QAGI,KAAK,EAAEhB,IAHX;QAII,QAAQ,EAAEC,OAJd;QAKI,SAAS;MALb;IATJ,EAdI;EAAA,EAAR;AAgCH,CA7DD;;AA+DA,eAAeJ,UAAf"},"metadata":{},"sourceType":"module"}