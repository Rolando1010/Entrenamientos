{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport storage from \"../utils/storage\";\n\nvar iterateRegistersExercise = function iterateRegistersExercise(exercise, callback) {\n  return new Promise(function (resolve) {\n    storage.getAll().then(function (data) {\n      Object.entries(data).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        if (key.includes(\"/\")) {\n          var exerciseInDay = value.find(function (_ref3) {\n            var name = _ref3.name;\n            return name === exercise;\n          });\n          if (exerciseInDay) callback(key, exerciseInDay);\n        }\n      });\n      resolve();\n    });\n  });\n};\n\nvar getDaysExercise = function getDaysExercise(exercise) {\n  return new Promise(function (resolve) {\n    var daysExercise = [];\n    iterateRegistersExercise(exercise, function (day, exerciseInDay) {\n      daysExercise.push({\n        date: day,\n        series: exerciseInDay.series\n      });\n    }).then(function () {\n      return resolve(daysExercise);\n    });\n  });\n};\n\nvar getRMsExercise = function getRMsExercise(exercise) {\n  return new Promise(function (resolve) {\n    storage.getAll().then(function (data) {\n      var days = [];\n      var rms = [];\n      Object.entries(data).forEach(function (_ref4) {\n        var _ref5 = _slicedToArray(_ref4, 2),\n            key = _ref5[0],\n            value = _ref5[1];\n\n        if (key.includes(\"/\")) {\n          var exerciseInDay = value.find(function (_ref6) {\n            var name = _ref6.name;\n            return name === exercise;\n          });\n\n          if (exerciseInDay) {\n            var maxRM = exerciseInDay.series.reduce(function (maxRM, _ref7) {\n              var weight = _ref7.weight,\n                  reps = _ref7.reps;\n              var serieRM = weight * (1 + 0.025 * reps);\n              if (serieRM > maxRM) return serieRM;\n              return maxRM;\n            }, 0);\n            days.push(key);\n            rms.push(maxRM);\n          }\n        }\n      });\n      resolve({\n        days: days,\n        rms: rms\n      });\n    });\n  });\n};\n\nvar getMaxWeightExercise = function getMaxWeightExercise(exercise) {\n  return new Promise(function (resolve) {\n    storage.getAll().then(function (data) {\n      var days = [];\n      var weights = [];\n      Object.entries(data).forEach(function (_ref8) {\n        var _ref9 = _slicedToArray(_ref8, 2),\n            key = _ref9[0],\n            value = _ref9[1];\n      });\n    });\n  });\n};\n\nexport { getDaysExercise, getRMsExercise };","map":{"version":3,"names":["storage","iterateRegistersExercise","exercise","callback","Promise","resolve","getAll","then","data","Object","entries","forEach","key","value","includes","exerciseInDay","find","name","getDaysExercise","daysExercise","day","push","date","series","getRMsExercise","days","rms","maxRM","reduce","weight","reps","serieRM","getMaxWeightExercise","weights"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/services/exercises.js"],"sourcesContent":["import storage from \"../utils/storage\";\r\n\r\nconst iterateRegistersExercise = (exercise, callback) => new Promise(resolve => {\r\n    storage.getAll().then(data => {\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            if(key.includes(\"/\")){\r\n                const exerciseInDay = value.find(({ name }) => name === exercise);\r\n                if(exerciseInDay) callback(key, exerciseInDay);\r\n            }\r\n        });\r\n        resolve();\r\n    });\r\n});\r\n\r\nconst getDaysExercise = exercise => new Promise(resolve => {\r\n    const daysExercise = [];\r\n    iterateRegistersExercise(exercise, (day, exerciseInDay) => {\r\n        daysExercise.push({date: day, series: exerciseInDay.series});\r\n    }).then(() => resolve(daysExercise));\r\n    \r\n    // storage.getAll().then(data => {\r\n    //     resolve(Object.entries(data).reduce((acc, [key, value]) => {\r\n    //         if(!key.includes(\"/\")) return acc;\r\n    //         const exerciseInDay = value.find(e => e.name === exercise);\r\n    //         if(!exerciseInDay) return acc;\r\n    //         return [...acc, {date: key, series: exerciseInDay.series}];\r\n    //     }, []));\r\n    // });\r\n});\r\n\r\nconst getRMsExercise = exercise => new Promise(resolve => {\r\n    storage.getAll().then(data => {\r\n        const days = [];\r\n        const rms = [];\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            if(key.includes(\"/\")){\r\n                const exerciseInDay = value.find(({ name }) => name === exercise);\r\n                if(exerciseInDay){\r\n                    const maxRM = exerciseInDay.series.reduce((maxRM, { weight, reps }) => {\r\n                        const serieRM = weight * (1 + 0.025 * reps);\r\n                        if(serieRM > maxRM) return serieRM;\r\n                        return maxRM;\r\n                    }, 0);\r\n                    days.push(key);\r\n                    rms.push(maxRM);\r\n                }\r\n            }\r\n        });\r\n        resolve({ days, rms });\r\n    });\r\n});\r\n\r\nconst getMaxWeightExercise = exercise => new Promise(resolve => {\r\n    storage.getAll().then(data => {\r\n        const days = [];\r\n        const weights = [];\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            \r\n        });\r\n    });\r\n});\r\n\r\nexport {\r\n    getDaysExercise,\r\n    getRMsExercise\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}