{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport storage from \"../utils/storage\";\n\nvar iterateRegistersExercise = function iterateRegistersExercise(exercise, callback) {\n  return new Promise(function (resolve) {\n    storage.getAll().then(function (data) {\n      Object.entries(data).forEach(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        if (key.includes(\"/\")) {\n          var exerciseInDay = value.find(function (_ref3) {\n            var name = _ref3.name;\n            return name === exercise;\n          });\n          if (exerciseInDay) callback(key, exerciseInDay);\n        }\n      });\n      resolve();\n    });\n  });\n};\n\nvar getDaysExercise = function getDaysExercise(exercise) {\n  return new Promise(function (resolve) {\n    var daysExercise = [];\n    iterateRegistersExercise(exercise, function (day, exerciseInDay) {\n      daysExercise.push({\n        date: day,\n        series: exerciseInDay.series\n      });\n    }).then(function () {\n      return resolve(daysExercise);\n    });\n  });\n};\n\nvar getRMsExercise = function getRMsExercise(exercise) {\n  return new Promise(function (resolve) {\n    var days = [];\n    var rms = [];\n    iterateRegistersExercise(exercise, function (day, exerciseInDay) {\n      var maxRM = exerciseInDay.series.reduce(function (maxRM, _ref4) {\n        var weight = _ref4.weight,\n            reps = _ref4.reps;\n        var serieRM = weight * (1 + 0.025 * reps);\n        if (serieRM > maxRM) return serieRM;\n        return maxRM;\n      }, 0);\n      days.push(day);\n      rms.push(maxRM);\n    }).then(function () {\n      return resolve({\n        days: days,\n        rms: rms\n      });\n    });\n  });\n};\n\nvar getMaxWeightsExercise = function getMaxWeightsExercise(exercise) {\n  return new Promise(function (resolve) {\n    var days = [];\n    var weights = [];\n    iterateRegistersExercise(exercise, function (day, exerciseInDay) {\n      var maxWeight = exerciseInDay.series.reduce(function (maxWeight, _ref5) {\n        var weight = _ref5.weight,\n            reps = _ref5.reps;\n        if (weight > maxWeight) return weight;\n        return maxWeight;\n      }, 0);\n      days.push(day);\n      weights.push(maxWeight);\n    }).then(function () {\n      return resolve({\n        days: days,\n        weights: weights\n      });\n    });\n  });\n};\n\nexport { getDaysExercise, getRMsExercise, getMaxWeightsExercise };","map":{"version":3,"names":["storage","iterateRegistersExercise","exercise","callback","Promise","resolve","getAll","then","data","Object","entries","forEach","key","value","includes","exerciseInDay","find","name","getDaysExercise","daysExercise","day","push","date","series","getRMsExercise","days","rms","maxRM","reduce","weight","reps","serieRM","getMaxWeightsExercise","weights","maxWeight"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/services/exercises.js"],"sourcesContent":["import storage from \"../utils/storage\";\r\n\r\nconst iterateRegistersExercise = (exercise, callback) => new Promise(resolve => {\r\n    storage.getAll().then(data => {\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            if(key.includes(\"/\")){\r\n                const exerciseInDay = value.find(({ name }) => name === exercise);\r\n                if(exerciseInDay) callback(key, exerciseInDay);\r\n            }\r\n        });\r\n        resolve();\r\n    });\r\n});\r\n\r\nconst getDaysExercise = exercise => new Promise(resolve => {\r\n    const daysExercise = [];\r\n    iterateRegistersExercise(exercise, (day, exerciseInDay) => {\r\n        daysExercise.push({date: day, series: exerciseInDay.series});\r\n    }).then(() => resolve(daysExercise));\r\n});\r\n\r\nconst getRMsExercise = exercise => new Promise(resolve => {\r\n    const days = [];\r\n    const rms = [];\r\n    iterateRegistersExercise(exercise, (day, exerciseInDay) => {\r\n        const maxRM = exerciseInDay.series.reduce((maxRM, { weight, reps }) => {\r\n            const serieRM = weight * (1 + 0.025 * reps);\r\n            if(serieRM > maxRM) return serieRM;\r\n            return maxRM;\r\n        }, 0);\r\n        days.push(day);\r\n        rms.push(maxRM);\r\n    }).then(() => resolve({ days, rms }));\r\n});\r\n\r\nconst getMaxWeightsExercise = exercise => new Promise(resolve => {\r\n    const days = [];\r\n    const weights = [];\r\n    iterateRegistersExercise(exercise, (day, exerciseInDay) => {\r\n        const maxWeight = exerciseInDay.series.reduce((maxWeight, {weight, reps}) => {\r\n            if(weight > maxWeight) return weight;\r\n            return maxWeight;\r\n        }, 0);\r\n        days.push(day);\r\n        weights.push(maxWeight);\r\n    }).then(() => resolve({ days, weights }));\r\n});\r\n\r\nexport {\r\n    getDaysExercise,\r\n    getRMsExercise,\r\n    getMaxWeightsExercise\r\n}"],"mappings":";AAAA,OAAOA,OAAP;;AAEA,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,QAAD,EAAWC,QAAX;EAAA,OAAwB,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;IAC5EL,OAAO,CAACM,MAAR,GAAiBC,IAAjB,CAAsB,UAAAC,IAAI,EAAI;MAC1BC,MAAM,CAACC,OAAP,CAAeF,IAAf,EAAqBG,OAArB,CAA6B,gBAAkB;QAAA;QAAA,IAAhBC,GAAgB;QAAA,IAAXC,KAAW;;QAC3C,IAAGD,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAH,EAAqB;UACjB,IAAMC,aAAa,GAAGF,KAAK,CAACG,IAAN,CAAW;YAAA,IAAGC,IAAH,SAAGA,IAAH;YAAA,OAAcA,IAAI,KAAKf,QAAvB;UAAA,CAAX,CAAtB;UACA,IAAGa,aAAH,EAAkBZ,QAAQ,CAACS,GAAD,EAAMG,aAAN,CAAR;QACrB;MACJ,CALD;MAMAV,OAAO;IACV,CARD;EASH,CAVwD,CAAxB;AAAA,CAAjC;;AAYA,IAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAAAhB,QAAQ;EAAA,OAAI,IAAIE,OAAJ,CAAY,UAAAC,OAAO,EAAI;IACvD,IAAMc,YAAY,GAAG,EAArB;IACAlB,wBAAwB,CAACC,QAAD,EAAW,UAACkB,GAAD,EAAML,aAAN,EAAwB;MACvDI,YAAY,CAACE,IAAb,CAAkB;QAACC,IAAI,EAAEF,GAAP;QAAYG,MAAM,EAAER,aAAa,CAACQ;MAAlC,CAAlB;IACH,CAFuB,CAAxB,CAEGhB,IAFH,CAEQ;MAAA,OAAMF,OAAO,CAACc,YAAD,CAAb;IAAA,CAFR;EAGH,CALmC,CAAJ;AAAA,CAAhC;;AAOA,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,CAAAtB,QAAQ;EAAA,OAAI,IAAIE,OAAJ,CAAY,UAAAC,OAAO,EAAI;IACtD,IAAMoB,IAAI,GAAG,EAAb;IACA,IAAMC,GAAG,GAAG,EAAZ;IACAzB,wBAAwB,CAACC,QAAD,EAAW,UAACkB,GAAD,EAAML,aAAN,EAAwB;MACvD,IAAMY,KAAK,GAAGZ,aAAa,CAACQ,MAAd,CAAqBK,MAArB,CAA4B,UAACD,KAAD,SAA6B;QAAA,IAAnBE,MAAmB,SAAnBA,MAAmB;QAAA,IAAXC,IAAW,SAAXA,IAAW;QACnE,IAAMC,OAAO,GAAGF,MAAM,IAAI,IAAI,QAAQC,IAAhB,CAAtB;QACA,IAAGC,OAAO,GAAGJ,KAAb,EAAoB,OAAOI,OAAP;QACpB,OAAOJ,KAAP;MACH,CAJa,EAIX,CAJW,CAAd;MAKAF,IAAI,CAACJ,IAAL,CAAUD,GAAV;MACAM,GAAG,CAACL,IAAJ,CAASM,KAAT;IACH,CARuB,CAAxB,CAQGpB,IARH,CAQQ;MAAA,OAAMF,OAAO,CAAC;QAAEoB,IAAI,EAAJA,IAAF;QAAQC,GAAG,EAAHA;MAAR,CAAD,CAAb;IAAA,CARR;EASH,CAZkC,CAAJ;AAAA,CAA/B;;AAcA,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAA9B,QAAQ;EAAA,OAAI,IAAIE,OAAJ,CAAY,UAAAC,OAAO,EAAI;IAC7D,IAAMoB,IAAI,GAAG,EAAb;IACA,IAAMQ,OAAO,GAAG,EAAhB;IACAhC,wBAAwB,CAACC,QAAD,EAAW,UAACkB,GAAD,EAAML,aAAN,EAAwB;MACvD,IAAMmB,SAAS,GAAGnB,aAAa,CAACQ,MAAd,CAAqBK,MAArB,CAA4B,UAACM,SAAD,SAA+B;QAAA,IAAlBL,MAAkB,SAAlBA,MAAkB;QAAA,IAAVC,IAAU,SAAVA,IAAU;QACzE,IAAGD,MAAM,GAAGK,SAAZ,EAAuB,OAAOL,MAAP;QACvB,OAAOK,SAAP;MACH,CAHiB,EAGf,CAHe,CAAlB;MAIAT,IAAI,CAACJ,IAAL,CAAUD,GAAV;MACAa,OAAO,CAACZ,IAAR,CAAaa,SAAb;IACH,CAPuB,CAAxB,CAOG3B,IAPH,CAOQ;MAAA,OAAMF,OAAO,CAAC;QAAEoB,IAAI,EAAJA,IAAF;QAAQQ,OAAO,EAAPA;MAAR,CAAD,CAAb;IAAA,CAPR;EAQH,CAXyC,CAAJ;AAAA,CAAtC;;AAaA,SACIf,eADJ,EAEIM,cAFJ,EAGIQ,qBAHJ"},"metadata":{},"sourceType":"module"}