{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Dropdown as DropDownElement } from 'react-native-element-dropdown';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar DropDown = function DropDown() {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFocus = _useState4[0],\n      setIsFocus = _useState4[1];\n\n  var renderLabel = function renderLabel() {\n    if (value || isFocus) {\n      return _jsx(Text, {\n        style: [styles.label, isFocus && {\n          color: 'blue'\n        }],\n        children: \"Dropdown label\"\n      });\n    }\n\n    return null;\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [renderLabel(), _jsx(DropDownElement, {\n      style: [styles.dropdown, isFocus && {\n        borderColor: 'blue'\n      }],\n      placeholderStyle: styles.placeholderStyle,\n      selectedTextStyle: styles.selectedTextStyle,\n      inputSearchStyle: styles.inputSearchStyle,\n      iconStyle: styles.iconStyle,\n      data: data,\n      search: true,\n      maxHeight: 300,\n      labelField: \"label\",\n      valueField: \"value\",\n      placeholder: !isFocus ? 'Select item' : '...',\n      searchPlaceholder: \"Search...\",\n      value: value,\n      onFocus: function onFocus() {\n        return setIsFocus(true);\n      },\n      onBlur: function onBlur() {\n        return setIsFocus(false);\n      },\n      onChange: function onChange(item) {\n        setValue(item.value);\n        setIsFocus(false);\n      },\n      renderLeftIcon: function renderLeftIcon() {\n        return _jsx(AntDesign, {\n          style: styles.icon,\n          color: isFocus ? 'blue' : 'black',\n          name: \"Safety\",\n          size: 20\n        });\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    padding: 16\n  },\n  dropdown: {\n    height: 50,\n    borderColor: 'gray',\n    borderWidth: 0.5,\n    borderRadius: 8,\n    paddingHorizontal: 8\n  },\n  icon: {\n    marginRight: 5\n  },\n  label: {\n    position: 'absolute',\n    backgroundColor: 'white',\n    left: 22,\n    top: 8,\n    zIndex: 999,\n    paddingHorizontal: 8,\n    fontSize: 14\n  },\n  placeholderStyle: {\n    fontSize: 16\n  },\n  selectedTextStyle: {\n    fontSize: 16\n  },\n  iconStyle: {\n    width: 20,\n    height: 20\n  },\n  inputSearchStyle: {\n    height: 40,\n    fontSize: 16\n  }\n});\nexport default DropDown;","map":{"version":3,"names":["React","useState","Dropdown","DropDownElement","DropDown","value","setValue","isFocus","setIsFocus","renderLabel","styles","label","color","container","dropdown","borderColor","placeholderStyle","selectedTextStyle","inputSearchStyle","iconStyle","data","item","icon","StyleSheet","create","backgroundColor","padding","height","borderWidth","borderRadius","paddingHorizontal","marginRight","position","left","top","zIndex","fontSize","width"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/components/drop-down.jsx"],"sourcesContent":["// import { useState } from \"react\";\r\n// import { View } from \"react-native\";\r\n// import DropDownPicker from 'react-native-dropdown-picker';\r\n// import theme from \"../styles/theme\";\r\n\r\n// const DropDown = ({ value, onChange, options, emptyStartMessage }) => {\r\n//     const [open, setOpen] = useState(false);\r\n\r\n//     return (\r\n//         <View style={{zIndex: 10}}>\r\n//         <DropDownPicker\r\n//             open={open}\r\n//             setOpen={setOpen}\r\n//             value={value}\r\n//             setValue={onChange}\r\n//             items={options.map(o => ({label: o, value: o}))}\r\n//             theme={\"DARK\"}\r\n//             translation={{\r\n//                 PLACEHOLDER: emptyStartMessage,\r\n//                 NOTHING_TO_SHOW: \"No hay opciones disponibles\"\r\n//             }}\r\n//             style={{\r\n//                 borderColor: \"transparent\",\r\n//                 backgroundColor: theme.background2,\r\n//                 marginBottom: 15\r\n//             }}\r\n//             textStyle={{\r\n//                 color: theme.fontColor1,\r\n//             }}\r\n//             listItemContainerStyle={{\r\n//                 backgroundColor: theme.background2\r\n//             }}\r\n//         />\r\n//         </View>\r\n//     );\r\n// }\r\n\r\n// export default DropDown;\r\n\r\nimport React, { useState } from 'react';\r\nimport { StyleSheet, Text, View } from 'react-native';\r\nimport { Dropdown as DropDownElement } from 'react-native-element-dropdown';\r\n\r\nconst DropDown = () => {\r\n    const [value, setValue] = useState(null);\r\n    const [isFocus, setIsFocus] = useState(false);\r\n\r\n    const renderLabel = () => {\r\n        if (value || isFocus) {\r\n            return (\r\n                <Text style={[styles.label, isFocus && { color: 'blue' }]}>\r\n                    Dropdown label\r\n                </Text>\r\n            );\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            {renderLabel()}\r\n            <DropDownElement\r\n                style={[styles.dropdown, isFocus && { borderColor: 'blue' }]}\r\n                placeholderStyle={styles.placeholderStyle}\r\n                selectedTextStyle={styles.selectedTextStyle}\r\n                inputSearchStyle={styles.inputSearchStyle}\r\n                iconStyle={styles.iconStyle}\r\n                data={data}\r\n                search\r\n                maxHeight={300}\r\n                labelField=\"label\"\r\n                valueField=\"value\"\r\n                placeholder={!isFocus ? 'Select item' : '...'}\r\n                searchPlaceholder=\"Search...\"\r\n                value={value}\r\n                onFocus={() => setIsFocus(true)}\r\n                onBlur={() => setIsFocus(false)}\r\n                onChange={item => {\r\n                    setValue(item.value);\r\n                    setIsFocus(false);\r\n                }}\r\n                renderLeftIcon={() => (\r\n                    <AntDesign\r\n                        style={styles.icon}\r\n                        color={isFocus ? 'blue' : 'black'}\r\n                        name=\"Safety\"\r\n                        size={20}\r\n                    />\r\n                )}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n      backgroundColor: 'white',\r\n      padding: 16,\r\n    },\r\n    dropdown: {\r\n      height: 50,\r\n      borderColor: 'gray',\r\n      borderWidth: 0.5,\r\n      borderRadius: 8,\r\n      paddingHorizontal: 8,\r\n    },\r\n    icon: {\r\n      marginRight: 5,\r\n    },\r\n    label: {\r\n      position: 'absolute',\r\n      backgroundColor: 'white',\r\n      left: 22,\r\n      top: 8,\r\n      zIndex: 999,\r\n      paddingHorizontal: 8,\r\n      fontSize: 14,\r\n    },\r\n    placeholderStyle: {\r\n      fontSize: 16,\r\n    },\r\n    selectedTextStyle: {\r\n      fontSize: 16,\r\n    },\r\n    iconStyle: {\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n    inputSearchStyle: {\r\n      height: 40,\r\n      fontSize: 16,\r\n    },\r\n  });\r\n\r\nexport default DropDown;"],"mappings":"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"},"metadata":{},"sourceType":"module"}