{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useMemo } from \"react\";\nimport { successToast } from \"../components/toast\";\nimport { getDayWorkout, saveExercise } from \"../services/day-workout\";\nimport useGlobalState from \"./useGlobalState\";\n\nvar useExercises = function useExercises() {\n  var _useGlobalState = useGlobalState(),\n      globalState = _useGlobalState.globalState,\n      setGlobalState = _useGlobalState.setGlobalState;\n\n  var dayExercises = useMemo(function () {\n    return (globalState == null ? void 0 : globalState.dayExercises) || [];\n  }, [globalState.dayExercises]);\n\n  var addExercise = function addExercise(exercise, weight, reps) {\n    return function () {\n      saveExercise(globalState.date, exercise, weight, reps);\n      setGlobalState(_objectSpread(_objectSpread({}, globalState), {}, {\n        dayExercises: getDayWorkout(globalState.date)\n      }));\n      successToast(\"Serie añadida\");\n    };\n  };\n\n  return {\n    dayExercises: dayExercises,\n    addExercise: addExercise\n  };\n};\n\nexport default useExercises;","map":{"version":3,"names":["useMemo","successToast","getDayWorkout","saveExercise","useGlobalState","useExercises","globalState","setGlobalState","dayExercises","addExercise","exercise","weight","reps","date"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/hooks/useExercises.js"],"sourcesContent":["import { useMemo } from \"react\";\r\nimport { successToast } from \"../components/toast\";\r\nimport { getDayWorkout, saveExercise } from \"../services/day-workout\";\r\nimport useGlobalState from \"./useGlobalState\";\r\n\r\nconst useExercises = () => {\r\n    const { globalState, setGlobalState } = useGlobalState();\r\n\r\n    const dayExercises = useMemo(() => globalState?.dayExercises || [], [globalState.dayExercises])\r\n\r\n    const addExercise = (exercise, weight, reps) => () => {\r\n        saveExercise(globalState.date, exercise, weight, reps);\r\n        setGlobalState({...globalState, dayExercises: getDayWorkout(globalState.date)});\r\n        successToast(\"Serie añadida\");\r\n    }\r\n\r\n    return {\r\n        dayExercises,\r\n        addExercise\r\n    }\r\n}\r\n\r\nexport default useExercises;"],"mappings":";;;;;;AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,SAASC,YAAT;AACA,SAASC,aAAT,EAAwBC,YAAxB;AACA,OAAOC,cAAP;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;EACvB,sBAAwCD,cAAc,EAAtD;EAAA,IAAQE,WAAR,mBAAQA,WAAR;EAAA,IAAqBC,cAArB,mBAAqBA,cAArB;;EAEA,IAAMC,YAAY,GAAGR,OAAO,CAAC;IAAA,OAAM,CAAAM,WAAW,QAAX,YAAAA,WAAW,CAAEE,YAAb,KAA6B,EAAnC;EAAA,CAAD,EAAwC,CAACF,WAAW,CAACE,YAAb,CAAxC,CAA5B;;EAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,QAAD,EAAWC,MAAX,EAAmBC,IAAnB;IAAA,OAA4B,YAAM;MAClDT,YAAY,CAACG,WAAW,CAACO,IAAb,EAAmBH,QAAnB,EAA6BC,MAA7B,EAAqCC,IAArC,CAAZ;MACAL,cAAc,iCAAKD,WAAL;QAAkBE,YAAY,EAAEN,aAAa,CAACI,WAAW,CAACO,IAAb;MAA7C,GAAd;MACAZ,YAAY,CAAC,eAAD,CAAZ;IACH,CAJmB;EAAA,CAApB;;EAMA,OAAO;IACHO,YAAY,EAAZA,YADG;IAEHC,WAAW,EAAXA;EAFG,CAAP;AAIH,CAfD;;AAiBA,eAAeJ,YAAf"},"metadata":{},"sourceType":"module"}