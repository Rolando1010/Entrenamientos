{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useEffect, useRef, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button, { IconButton } from \"../components/button\";\nimport { PlusIcon } from \"../components/icons\";\nimport { LabelInput } from \"../components/input\";\nimport ListItem from \"../components/list-item\";\nimport Modal from \"../components/modal\";\nimport { getCategories } from \"../services/categories\";\nimport { listItemStyle } from \"../styles/components\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar Categories = function Categories() {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      categories = _useState2[0],\n      setCategories = _useState2[1];\n\n  var modalRef = useRef();\n  useEffect(function () {\n    getCategories().then(setCategories);\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [_jsx(View, {\n      style: listItemStyle.container,\n      children: _jsx(IconButton, {\n        icon: _jsx(PlusIcon, {}),\n        onPress: function onPress() {\n          return modalRef.open();\n        },\n        children: \"A\\xF1adir categor\\xEDa\"\n      })\n    }), categories.map(function (category, index) {\n      return _jsx(ListItem, {\n        text: category,\n        url: \"/categories/\" + category + \"/exercises\"\n      }, \"category-\" + index);\n    }), _jsx(Modal, {\n      title: \"Nueva categor\\xEDa\",\n      footerElement: _jsx(Button, {\n        children: \"A\\xF1adir\"\n      }),\n      modalRef: modalRef,\n      children: _jsx(LabelInput, {\n        text: \"Nombre de categor\\xEDa\",\n        containerStyle: {\n          width: \"100%\",\n          marginTop: 7\n        }\n      })\n    })]\n  });\n};\n\nexport default Categories;","map":{"version":3,"names":["useEffect","useRef","useState","Button","IconButton","PlusIcon","LabelInput","ListItem","Modal","getCategories","listItemStyle","Categories","categories","setCategories","modalRef","then","container","open","map","category","index","width","marginTop"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/screens/categories.jsx"],"sourcesContent":["import { useEffect, useRef, useState } from \"react\";\r\nimport { View } from \"react-native\";\r\nimport Button, { IconButton } from \"../components/button\";\r\nimport { PlusIcon } from \"../components/icons\";\r\nimport { LabelInput } from \"../components/input\";\r\nimport ListItem from \"../components/list-item\";\r\nimport Modal from \"../components/modal\";\r\nimport { getCategories } from \"../services/categories\";\r\nimport { listItemStyle } from \"../styles/components\";\r\n\r\nconst Categories = () => {\r\n    const [categories, setCategories] = useState([]);\r\n    const modalRef = useRef();\r\n\r\n    useEffect(() => {\r\n        getCategories().then(setCategories);\r\n    }, []);\r\n\r\n    return (<>\r\n        <View style={listItemStyle.container}>\r\n            <IconButton icon={<PlusIcon/>} onPress={() => modalRef.open()}>\r\n                Añadir categoría\r\n            </IconButton>\r\n        </View>\r\n        {categories.map((category, index) =>\r\n            <ListItem\r\n                key={`category-${index}`}\r\n                text={category}\r\n                url={`/categories/${category}/exercises`}\r\n            />\r\n        )}\r\n        <Modal\r\n            title=\"Nueva categoría\"\r\n            footerElement={\r\n                <Button>\r\n                    Añadir\r\n                </Button>\r\n            }\r\n            modalRef={modalRef}\r\n        >\r\n            <LabelInput text=\"Nombre de categoría\" containerStyle={{width: \"100%\", marginTop: 7}}/>\r\n        </Modal>\r\n    </>);\r\n}\r\n\r\nexport default Categories;"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;;AAEA,OAAOC,MAAP,IAAiBC,UAAjB;AACA,SAASC,QAAT;AACA,SAASC,UAAT;AACA,OAAOC,QAAP;AACA,OAAOC,KAAP;AACA,SAASC,aAAT;AACA,SAASC,aAAT;;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;EACrB,gBAAoCT,QAAQ,CAAC,EAAD,CAA5C;EAAA;EAAA,IAAOU,UAAP;EAAA,IAAmBC,aAAnB;;EACA,IAAMC,QAAQ,GAAGb,MAAM,EAAvB;EAEAD,SAAS,CAAC,YAAM;IACZS,aAAa,GAAGM,IAAhB,CAAqBF,aAArB;EACH,CAFQ,EAEN,EAFM,CAAT;EAIA,OAAQ;IAAA,WACJ,KAAC,IAAD;MAAM,KAAK,EAAEH,aAAa,CAACM,SAA3B;MAAA,UACI,KAAC,UAAD;QAAY,IAAI,EAAE,KAAC,QAAD,KAAlB;QAA+B,OAAO,EAAE;UAAA,OAAMF,QAAQ,CAACG,IAAT,EAAN;QAAA,CAAxC;QAAA;MAAA;IADJ,EADI,EAMHL,UAAU,CAACM,GAAX,CAAe,UAACC,QAAD,EAAWC,KAAX;MAAA,OACZ,KAAC,QAAD;QAEI,IAAI,EAAED,QAFV;QAGI,GAAG,mBAAiBA,QAAjB;MAHP,iBACqBC,KADrB,CADY;IAAA,CAAf,CANG,EAaJ,KAAC,KAAD;MACI,KAAK,EAAC,oBADV;MAEI,aAAa,EACT,KAAC,MAAD;QAAA;MAAA,EAHR;MAOI,QAAQ,EAAEN,QAPd;MAAA,UASI,KAAC,UAAD;QAAY,IAAI,EAAC,wBAAjB;QAAuC,cAAc,EAAE;UAACO,KAAK,EAAE,MAAR;UAAgBC,SAAS,EAAE;QAA3B;MAAvD;IATJ,EAbI;EAAA,EAAR;AAyBH,CAjCD;;AAmCA,eAAeX,UAAf"},"metadata":{},"sourceType":"module"}