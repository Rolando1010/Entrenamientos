{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport storage from \"../utils/storage\";\n\nvar getCategories = function getCategories() {\n  return new Promise(function (resolve) {\n    storage.get(\"categories\").then(function (res) {\n      return resolve(res || []);\n    });\n  });\n};\n\nvar getExercisesCategory = function getExercisesCategory(category) {\n  return new Promise(function (resolve) {\n    storage.get(\"exercises-categories\").then(function (data) {\n      resolve(data ? data[category] : []);\n    });\n  });\n};\n\nvar saveCategory = function saveCategory(categoryName) {\n  return new Promise(function (resolve, reject) {\n    storage.get(\"categories\").then(function (categories) {\n      var existingCategory = categories.find(function (c) {\n        return c === categoryName;\n      });\n\n      if (!existingCategory) {\n        storage.set(\"categories\", [].concat(_toConsumableArray(categories), [categoryName])).then(function () {\n          storage.get(\"exercises-categories\").then(function (exercisesCategories) {\n            storage.set(\"exercises-categories\", _objectSpread(_objectSpread({}, exercisesCategories), {}, _defineProperty({}, categoryName, []))).then(resolve);\n          });\n        });\n      } else reject(\"Nombre de categoría ya existente\");\n    });\n  });\n};\n\nvar removeCategory = function removeCategory(categoryName) {\n  return new Promise(function (resolve) {\n    storage.get(\"categories\").then(function (categories) {\n      storage.set(\"categories\", categories.filter(function (c) {\n        return c !== categoryName;\n      })).then(function () {\n        storage.get(\"exercises-categories\").then(function (exercisesCategories) {\n          delete exercisesCategories[categoryName];\n          storage.set(\"exercises-categories\", exercisesCategories).then(resolve);\n        });\n      });\n    });\n  });\n};\n\nvar saveExerciseCategory = function saveExerciseCategory(categoryName, exerciseName) {\n  return new Promise(function (resolve, reject) {\n    storage.get(\"exercises-categories\").then(function (exercisesCategories) {\n      var existingExercise = Object.entries(exercisesCategories).filter(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            category = _ref2[0],\n            exercises = _ref2[1];\n\n        return exercises.filter(function (e) {\n          return e === exerciseName;\n        }).length;\n      }).length;\n\n      if (!existingExercise) {\n        exercisesCategories[categoryName].push(exerciseName);\n        storage.set(\"exercises-categories\", exercisesCategories).then(resolve);\n      } else reject(\"Nombre de ejercicio ya existente\");\n    });\n  });\n};\n\nvar removeExerciseCategory = function removeExerciseCategory(categoryName, exerciseName) {\n  return new Promise(function (resolve) {\n    storage.get(\"exercises-categories\").then(function (exercisesCategories) {\n      exercisesCategories[categoryName] = exercisesCategories[categoryName].filter(e !== exerciseName);\n      storage.set(\"exercises-categories\", exercisesCategories).then(resolve);\n    });\n  });\n};\n\nexport { getCategories, getExercisesCategory, saveCategory, removeCategory, saveExerciseCategory };","map":{"version":3,"names":["storage","getCategories","Promise","resolve","get","then","res","getExercisesCategory","category","data","saveCategory","categoryName","reject","categories","existingCategory","find","c","set","exercisesCategories","removeCategory","filter","saveExerciseCategory","exerciseName","existingExercise","Object","entries","exercises","e","length","push","removeExerciseCategory"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/services/categories.js"],"sourcesContent":["import storage from \"../utils/storage\";\r\n\r\nconst getCategories = () => new Promise(resolve => {\r\n    storage.get(\"categories\")\r\n        .then(res => resolve(res || []));\r\n});\r\n\r\nconst getExercisesCategory = (category) => new Promise(resolve => {\r\n    storage.get(\"exercises-categories\").then(data => {\r\n        resolve(data ? data[category] : []);\r\n    });\r\n});\r\n\r\nconst saveCategory = categoryName => new Promise((resolve, reject) => {\r\n    storage.get(\"categories\").then(categories => {\r\n        const existingCategory = categories.find(c => c === categoryName);\r\n        if(!existingCategory){\r\n            storage.set(\"categories\", [...categories, categoryName]).then(() => {\r\n                storage.get(\"exercises-categories\").then(exercisesCategories => {\r\n                    storage.set(\"exercises-categories\", {...exercisesCategories, [categoryName]: []}).then(resolve);\r\n                });\r\n            });\r\n        }\r\n        else reject(\"Nombre de categoría ya existente\");\r\n    });\r\n});\r\n\r\nconst removeCategory = categoryName => new Promise(resolve => {\r\n    storage.get(\"categories\").then(categories => {\r\n        storage.set(\"categories\", categories.filter(c => c !== categoryName)).then(() => {\r\n            storage.get(\"exercises-categories\").then(exercisesCategories => {\r\n                delete exercisesCategories[categoryName];\r\n                storage.set(\"exercises-categories\", exercisesCategories).then(resolve);\r\n            });\r\n        });\r\n    });\r\n});\r\n\r\nconst saveExerciseCategory = (categoryName, exerciseName) => new Promise((resolve, reject) => {\r\n    storage.get(\"exercises-categories\").then(exercisesCategories => {\r\n        const existingExercise = Object.entries(exercisesCategories).filter(([category, exercises]) => {\r\n            return exercises.filter(e => e === exerciseName).length;\r\n        }).length;\r\n        if(!existingExercise){\r\n            exercisesCategories[categoryName].push(exerciseName)\r\n            storage.set(\"exercises-categories\", exercisesCategories).then(resolve);\r\n        }else reject(\"Nombre de ejercicio ya existente\");\r\n    });\r\n});\r\n\r\nconst removeExerciseCategory = (categoryName, exerciseName) => new Promise(resolve => {\r\n    storage.get(\"exercises-categories\").then(exercisesCategories => {\r\n        exercisesCategories[categoryName] = exercisesCategories[categoryName].filter(e !== exerciseName);\r\n        storage.set(\"exercises-categories\", exercisesCategories).then(resolve);\r\n    });\r\n});\r\n\r\nexport {\r\n    getCategories,\r\n    getExercisesCategory,\r\n    saveCategory,\r\n    removeCategory,\r\n    saveExerciseCategory\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}