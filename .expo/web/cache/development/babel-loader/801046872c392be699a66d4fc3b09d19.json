{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport storage from \"../utils/storage\";\n\nvar getDaysExercise = function getDaysExercise(exercise) {\n  return new Promise(function (resolve) {\n    storage.getAll().then(function (data) {\n      resolve(Object.entries(data).reduce(function (acc, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            value = _ref2[1];\n\n        if (!key.includes(\"/\")) return acc;\n        var exerciseInDay = value.find(function (e) {\n          return e.name === exercise;\n        });\n        if (!exerciseInDay) return acc;\n        return [].concat(_toConsumableArray(acc), [{\n          date: key,\n          series: exerciseInDay.series\n        }]);\n      }, []));\n    });\n  });\n};\n\nvar getRMsExercise = function getRMsExercise(exercise) {\n  return Promise(function (resolve) {\n    storage.getAll().then(function (data) {\n      var days = [];\n      var rms = [];\n      Object.entries(data).forEach(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            key = _ref4[0],\n            value = _ref4[1];\n\n        if (key.includes(\"/\")) {\n          var exerciseInDay = value.find(function (_ref5) {\n            var name = _ref5.name;\n            return name === exercise;\n          });\n\n          if (exerciseInDay) {\n            var maxRM = exerciseInDay.series.reduce(function (maxRM, _ref6) {\n              var weight = _ref6.weight,\n                  reps = _ref6.reps;\n              var serieRM = weight * (1 + 0.025 * reps);\n              if (serieRM > maxRM) return serieRM;\n              return maxRM;\n            }, 0);\n            days.push(key);\n            rms.push(maxRM);\n          }\n        }\n      });\n      resolve({\n        days: days,\n        rms: rms\n      });\n    });\n  });\n};\n\nexport { getDaysExercise, getRMsExercise };","map":{"version":3,"names":["storage","getDaysExercise","exercise","Promise","resolve","getAll","then","data","Object","entries","reduce","acc","key","value","includes","exerciseInDay","find","e","name","date","series","getRMsExercise","days","rms","forEach","maxRM","weight","reps","serieRM","push"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/services/exercises.js"],"sourcesContent":["import storage from \"../utils/storage\";\r\n\r\nconst getDaysExercise = exercise => new Promise(resolve => {\r\n    storage.getAll().then(data => {\r\n        resolve(Object.entries(data).reduce((acc, [key, value]) => {\r\n            if(!key.includes(\"/\")) return acc;\r\n            const exerciseInDay = value.find(e => e.name === exercise);\r\n            if(!exerciseInDay) return acc;\r\n            return [...acc, {date: key, series: exerciseInDay.series}];\r\n        }, []));\r\n    });\r\n});\r\n\r\nconst getRMsExercise = exercise => Promise(resolve => {\r\n    storage.getAll().then(data => {\r\n        const days = [];\r\n        const rms = [];\r\n        Object.entries(data).forEach(([key, value]) => {\r\n            if(key.includes(\"/\")){\r\n                const exerciseInDay = value.find(({ name }) => name === exercise);\r\n                if(exerciseInDay){\r\n                    const maxRM = exerciseInDay.series.reduce((maxRM, { weight, reps }) => {\r\n                        const serieRM = weight * (1 + 0.025 * reps);\r\n                        if(serieRM > maxRM) return serieRM;\r\n                        return maxRM;\r\n                    }, 0);\r\n                    days.push(key);\r\n                    rms.push(maxRM);\r\n                }\r\n            }\r\n        });\r\n        resolve({ days, rms });\r\n    });\r\n});\r\n\r\nexport {\r\n    getDaysExercise,\r\n    getRMsExercise\r\n}"],"mappings":";;AAAA,OAAOA,OAAP;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,QAAQ;EAAA,OAAI,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;IACvDJ,OAAO,CAACK,MAAR,GAAiBC,IAAjB,CAAsB,UAAAC,IAAI,EAAI;MAC1BH,OAAO,CAACI,MAAM,CAACC,OAAP,CAAeF,IAAf,EAAqBG,MAArB,CAA4B,UAACC,GAAD,QAAuB;QAAA;QAAA,IAAhBC,GAAgB;QAAA,IAAXC,KAAW;;QACvD,IAAG,CAACD,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAJ,EAAuB,OAAOH,GAAP;QACvB,IAAMI,aAAa,GAAGF,KAAK,CAACG,IAAN,CAAW,UAAAC,CAAC;UAAA,OAAIA,CAAC,CAACC,IAAF,KAAWhB,QAAf;QAAA,CAAZ,CAAtB;QACA,IAAG,CAACa,aAAJ,EAAmB,OAAOJ,GAAP;QACnB,oCAAWA,GAAX,IAAgB;UAACQ,IAAI,EAAEP,GAAP;UAAYQ,MAAM,EAAEL,aAAa,CAACK;QAAlC,CAAhB;MACH,CALO,EAKL,EALK,CAAD,CAAP;IAMH,CAPD;EAQH,CATmC,CAAJ;AAAA,CAAhC;;AAWA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAnB,QAAQ;EAAA,OAAIC,OAAO,CAAC,UAAAC,OAAO,EAAI;IAClDJ,OAAO,CAACK,MAAR,GAAiBC,IAAjB,CAAsB,UAAAC,IAAI,EAAI;MAC1B,IAAMe,IAAI,GAAG,EAAb;MACA,IAAMC,GAAG,GAAG,EAAZ;MACAf,MAAM,CAACC,OAAP,CAAeF,IAAf,EAAqBiB,OAArB,CAA6B,iBAAkB;QAAA;QAAA,IAAhBZ,GAAgB;QAAA,IAAXC,KAAW;;QAC3C,IAAGD,GAAG,CAACE,QAAJ,CAAa,GAAb,CAAH,EAAqB;UACjB,IAAMC,aAAa,GAAGF,KAAK,CAACG,IAAN,CAAW;YAAA,IAAGE,IAAH,SAAGA,IAAH;YAAA,OAAcA,IAAI,KAAKhB,QAAvB;UAAA,CAAX,CAAtB;;UACA,IAAGa,aAAH,EAAiB;YACb,IAAMU,KAAK,GAAGV,aAAa,CAACK,MAAd,CAAqBV,MAArB,CAA4B,UAACe,KAAD,SAA6B;cAAA,IAAnBC,MAAmB,SAAnBA,MAAmB;cAAA,IAAXC,IAAW,SAAXA,IAAW;cACnE,IAAMC,OAAO,GAAGF,MAAM,IAAI,IAAI,QAAQC,IAAhB,CAAtB;cACA,IAAGC,OAAO,GAAGH,KAAb,EAAoB,OAAOG,OAAP;cACpB,OAAOH,KAAP;YACH,CAJa,EAIX,CAJW,CAAd;YAKAH,IAAI,CAACO,IAAL,CAAUjB,GAAV;YACAW,GAAG,CAACM,IAAJ,CAASJ,KAAT;UACH;QACJ;MACJ,CAbD;MAcArB,OAAO,CAAC;QAAEkB,IAAI,EAAJA,IAAF;QAAQC,GAAG,EAAHA;MAAR,CAAD,CAAP;IACH,CAlBD;EAmBH,CApByC,CAAX;AAAA,CAA/B;;AAsBA,SACItB,eADJ,EAEIoB,cAFJ"},"metadata":{},"sourceType":"module"}