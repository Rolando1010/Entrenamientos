{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { isString } from \"../common\";\nimport { MobileAds } from \"../MobileAds\";\nimport { validateAdRequestOptions } from \"../validateAdRequestOptions\";\nimport { MobileAd } from \"./MobileAd\";\nexport var InterstitialAd = function (_MobileAd) {\n  _inherits(InterstitialAd, _MobileAd);\n\n  var _super = _createSuper(InterstitialAd);\n\n  function InterstitialAd() {\n    _classCallCheck(this, InterstitialAd);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(InterstitialAd, [{\n    key: \"addAdEventsListener\",\n    value: function addAdEventsListener(listener) {\n      return this._addAdEventsListener(listener);\n    }\n  }, {\n    key: \"addAdEventListener\",\n    value: function addAdEventListener(type, listener) {\n      return this._addAdEventListener(type, listener);\n    }\n  }], [{\n    key: \"createForAdRequest\",\n    value: function createForAdRequest(adUnitId, requestOptions) {\n      if (!isString(adUnitId)) {\n        throw new Error(\"InterstitialAd.createForAdRequest(*) 'adUnitId' expected an string value.\");\n      }\n\n      var options = {};\n\n      try {\n        options = validateAdRequestOptions(requestOptions);\n      } catch (e) {\n        if (e instanceof Error) {\n          throw new Error(\"InterstitialAd.createForAdRequest(_, *) \" + e.message + \".\");\n        }\n      }\n\n      var requestId = InterstitialAd._interstitialRequest++;\n      return new InterstitialAd('interstitial', MobileAds(), requestId, adUnitId, options);\n    }\n  }]);\n\n  return InterstitialAd;\n}(MobileAd);\n\n_defineProperty(InterstitialAd, \"_interstitialRequest\", 0);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAiBA,SAASA,QAAT;AACA,SAASC,SAAT;AACA,SAASC,wBAAT;AACA,SAASC,QAAT;AA6CA,WAAaC,cAAb;EAAA;;EAAA;;EAAA;IAAA;;IAAA;EAAA;;EAAA;IAAA;IAAA,OA0CEC,6BAA2CC,QAA3CD,EAA0E;MACxE,OAAO,KAAKE,oBAAL,CAA0BD,QAA1B,CAAP;IACF;EA5CF;IAAA;IAAA,OA8CEE,4BAA0CC,IAA1CD,EAAmDF,QAAnDE,EAAiF;MAC/E,OAAO,KAAKE,mBAAL,CAAyBD,IAAzB,EAA+BH,QAA/B,CAAP;IACF;EAhDF;IAAA;IAAA,OAwBE,4BAA0BK,QAA1B,EAA4CC,cAA5C,EAA6E;MAC3E,IAAI,CAACZ,QAAQ,CAACW,QAAD,CAAb,EAAyB;QACvB,MAAM,IAAIE,KAAJ,CAAU,2EAAV,CAAN;MACF;;MAEA,IAAIC,OAAO,GAAG,EAAd;;MACA,IAAI;QACFA,OAAO,GAAGZ,wBAAwB,CAACU,cAAD,CAAlCE;MACD,CAFD,CAEE,OAAOC,CAAP,EAAU;QACV,IAAIA,CAAC,YAAYF,KAAjB,EAAwB;UACtB,MAAM,IAAIA,KAAJ,8CAAqDE,CAAC,CAACC,OAAvD,OAAN;QACF;MACF;;MAEA,IAAMC,SAAS,GAAGb,cAAc,CAACc,oBAAfd,EAAlB;MACA,OAAO,IAAIA,cAAJ,CAAmB,cAAnB,EAAmCH,SAAS,EAA5C,EAAgDgB,SAAhD,EAA2DN,QAA3D,EAAqEG,OAArE,CAAP;IACF;EAxCF;;EAAA;AAAA,EAAoCX,QAApC;;AAiDCgB,gBAjDYf,cAiDZ,EAjD0B,sBAiD1B,EAhDyC,CAgDzC","names":["isString","MobileAds","validateAdRequestOptions","MobileAd","InterstitialAd","addAdEventsListener","listener","_addAdEventsListener","addAdEventListener","type","_addAdEventListener","adUnitId","requestOptions","Error","options","e","message","requestId","_interstitialRequest","_defineProperty"],"sources":["InterstitialAd.ts"],"sourcesContent":["/*\n * Copyright (c) 2016-present Invertase Limited & Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this library except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport { isString } from '../common';\nimport { MobileAds } from '../MobileAds';\nimport { validateAdRequestOptions } from '../validateAdRequestOptions';\nimport { MobileAd } from './MobileAd';\nimport { AdEventType } from '../AdEventType';\nimport { AdEventListener } from '../types/AdEventListener';\nimport { AdEventsListener } from '../types/AdEventsListener';\nimport { RequestOptions } from '../types/RequestOptions';\n\n/**\n * A class for interacting and showing Interstitial Ads.\n *\n * An Interstitial advert can be pre-loaded and shown at a suitable point in your apps flow, such as at the end of a level\n * in a game. An Interstitial is a full screen advert, laid on-top of your entire application which the user can interact with.\n * Interactions are passed back via events which should be handled accordingly inside of your app.\n *\n * #### Example\n *\n * First create a new Interstitial instance, passing in your Ad Unit ID from the Google Mobile Ads configuration console, and any additional\n * request options. The example below will present a test advert, and only request a non-personalized ad.\n *\n * ```js\n * import { InterstitialAd, TestIds } from 'react-native-google-mobile-ads';\n *\n * const interstitial = InterstitialAd.createForAdRequest(TestIds.INTERSTITIAL, {\n *     requestNonPersonalizedAdsOnly: true,\n * });\n *  ```\n *\n * Each advert needs to be loaded from Google Mobile Ads before being shown. It is recommended this is performed before the user\n * reaches the checkpoint to show the advert, so it's ready to go. Before loading the advert, we need to setup\n * event listeners to listen for updates from Google Mobile Ads, such as advert loaded or failed to load.\n *\n * Event types match the `AdEventType` interface. Once the advert has loaded, we can trigger it to show:\n *\n * ```js\n * import { AdEventType } from 'react-native-google-mobile-ads';\n *\n * interstitialAd.addAdEventListener(AdEventType.Loaded, () => {\n *   interstitialAd.show();\n * });\n *\n * interstitial.load();\n *  ```\n *\n * The advert will be presented to the user, and several more events can be triggered such as the user clicking the\n * advert or closing it.\n */\nexport class InterstitialAd extends MobileAd {\n  protected static _interstitialRequest = 0;\n  /**\n   * Creates a new InterstitialAd instance.\n   *\n   * #### Example\n   *\n   * ```js\n   * import { InterstitialAd, AdEventType, TestIds } from 'react-native-google-mobile-ads';\n   *\n   * const interstitialAd = await InterstitialAd.createForAdRequest(TestIds.INTERSTITIAL, {\n   *   requestAgent: 'CoolAds',\n   * });\n   *\n   * interstitialAd.addAdEventListener(AdEventType.Loaded, () => {\n   *   interstitialAd.show();\n   * });\n   *\n   * interstitialAd.load();\n   * ```\n   *\n   * @param adUnitId The Ad Unit ID for the Interstitial. You can find this on your Google Mobile Ads dashboard.\n   * @param requestOptions Optional RequestOptions used to load the ad.\n   */\n  static createForAdRequest(adUnitId: string, requestOptions?: RequestOptions) {\n    if (!isString(adUnitId)) {\n      throw new Error(\"InterstitialAd.createForAdRequest(*) 'adUnitId' expected an string value.\");\n    }\n\n    let options = {};\n    try {\n      options = validateAdRequestOptions(requestOptions);\n    } catch (e) {\n      if (e instanceof Error) {\n        throw new Error(`InterstitialAd.createForAdRequest(_, *) ${e.message}.`);\n      }\n    }\n\n    const requestId = InterstitialAd._interstitialRequest++;\n    return new InterstitialAd('interstitial', MobileAds(), requestId, adUnitId, options);\n  }\n\n  addAdEventsListener<T extends AdEventType>(listener: AdEventsListener<T>) {\n    return this._addAdEventsListener(listener);\n  }\n\n  addAdEventListener<T extends AdEventType>(type: T, listener: AdEventListener<T>) {\n    return this._addAdEventListener(type, listener);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}