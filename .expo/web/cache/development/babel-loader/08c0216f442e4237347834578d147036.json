{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport PropTypes from \"prop-types\";\nimport { WebView } from \"react-native-webview\";\nimport { getMinifiedEChartsFramework } from \"./chartconfig\";\nimport * as jsBuilder from \"./jsBuilder\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar ECharts = function (_Component) {\n  _inherits(ECharts, _Component);\n\n  var _super = _createSuper(ECharts);\n\n  function ECharts(props) {\n    var _this;\n\n    _classCallCheck(this, ECharts);\n\n    _this = _super.call(this, props);\n\n    _this.onMessage = function (e) {\n      try {\n        if (!e) return null;\n        var onData = _this.props.onData;\n        var data = JSON.parse(unescape(unescape(e.nativeEvent.data)));\n\n        if (data.types === \"DATA\") {\n          onData(data.payload);\n        } else if (data.types === \"CALLBACK\") {\n          var uuid = data.uuid;\n\n          _this.callbacks[uuid](data.payload);\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.postMessage = function (data) {\n      _this.webview.postMessage(jsBuilder.convertToPostMessageString(data));\n    };\n\n    _this.ID = function () {\n      return \"_\" + Math.random().toString(36).substr(2, 9);\n    };\n\n    _this.setBackgroundColor = function (color) {\n      var data = {\n        types: \"SET_BACKGROUND_COLOR\",\n        color: color\n      };\n\n      _this.postMessage(data);\n    };\n\n    _this.getOption = function (callback) {\n      var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n      var uuid = _this.ID();\n\n      _this.callbacks[uuid] = callback;\n      var data = {\n        types: \"GET_OPTION\",\n        uuid: uuid,\n        properties: properties\n      };\n\n      _this.postMessage(data);\n    };\n\n    _this.setOption = function (option, notMerge, lazyUpdate) {\n      var data = {\n        types: \"SET_OPTION\",\n        payload: {\n          option: option,\n          notMerge: notMerge || false,\n          lazyUpdate: lazyUpdate || false\n        }\n      };\n\n      _this.postMessage(data);\n    };\n\n    _this.clear = function () {\n      var data = {\n        types: \"CLEAR\"\n      };\n\n      _this.postMessage(data);\n    };\n\n    _this.getWebViewRef = function (ref) {\n      _this.webview = ref;\n    };\n\n    _this.onLoadEnd = function () {\n      if (_this.webview) {\n        _this.webview.injectJavaScript(jsBuilder.getJavascriptSource(_this.props));\n      }\n\n      _this.props.onLoadEnd();\n    };\n\n    _this.onGetHeight = null;\n    _this.callbacks = {};\n    _this.html = \"\\n      <!DOCTYPE html>\\n      <html lang=\\\"de\\\">\\n        <head>\\n            <meta http-equiv=\\\"content-type\\\" content=\\\"text/html; charset=utf-8\\\">\\n            <meta name=\\\"viewport\\\" content=\\\"initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\\\">\\n            <style type=\\\"text/css\\\">\\n                html,body {\\n                height: 100%;\\n                width: 100%;\\n                margin: 0;\\n                padding: 0;\\n                background-color:rgba(0, 0, 0, 0);\\n                }\\n                #main {\\n                height: 100%;\\n                width: 100%;\\n                background-color:rgba(0, 0, 0, 0);\\n                }\\n            </style>\\n            \\n            <script>\\n                \" + getMinifiedEChartsFramework() + \"\\n            </script>\\n        </head>\\n\\n        <body>\\n            <div id=\\\"main\\\">\\n            </div>\\n        </body>\\n\\n      </html>\";\n    return _this;\n  }\n\n  _createClass(ECharts, [{\n    key: \"render\",\n    value: function render() {\n      var source = {};\n\n      if (this.props.customTemplatePath) {\n        source = {\n          uri: this.props.customTemplatePath\n        };\n      } else {\n        source = {\n          html: this.html,\n          baseUrl: \"\"\n        };\n      }\n\n      return _jsx(View, {\n        style: {\n          flex: 1\n        },\n        children: _jsx(WebView, {\n          ref: this.getWebViewRef,\n          originWhitelist: [\"*\"],\n          scrollEnabled: false,\n          source: source,\n          onMessage: this.onMessage,\n          allowFileAccess: true,\n          allowUniversalAccessFromFileURLs: true,\n          mixedContentMode: \"always\",\n          onLoadEnd: this.onLoadEnd\n        })\n      });\n    }\n  }]);\n\n  return ECharts;\n}(Component);\n\nECharts.propTypes = {\n  onData: PropTypes.func,\n  legacyMode: PropTypes.bool,\n  canvas: PropTypes.bool,\n  onLoadEnd: PropTypes.func,\n  backgroundColor: PropTypes.string,\n  customTemplatePath: PropTypes.string\n};\nECharts.defaultProps = {\n  onData: function onData() {},\n  legacyMode: false,\n  canvas: false,\n  onLoadEnd: function onLoadEnd() {},\n  backgroundColor: \"rgba(0, 0, 0, 0)\"\n};\nexport { ECharts };","map":{"version":3,"names":["React","Component","PropTypes","WebView","getMinifiedEChartsFramework","jsBuilder","ECharts","props","onMessage","e","onData","data","JSON","parse","unescape","nativeEvent","types","payload","uuid","callbacks","error","console","log","postMessage","webview","convertToPostMessageString","ID","Math","random","toString","substr","setBackgroundColor","color","getOption","callback","properties","undefined","setOption","option","notMerge","lazyUpdate","clear","getWebViewRef","ref","onLoadEnd","injectJavaScript","getJavascriptSource","onGetHeight","html","source","customTemplatePath","uri","baseUrl","flex","propTypes","func","legacyMode","bool","canvas","backgroundColor","string","defaultProps"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/node_modules/react-native-echarts-wrapper/src/index.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport { View } from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport { WebView } from \"react-native-webview\";\n\nimport { getMinifiedEChartsFramework } from \"./chartconfig\";\nimport * as jsBuilder from \"./jsBuilder\";\n\nclass ECharts extends Component {\n  static propTypes = {\n    onData: PropTypes.func,\n    legacyMode: PropTypes.bool,\n    canvas: PropTypes.bool,\n    onLoadEnd: PropTypes.func,\n    backgroundColor: PropTypes.string,\n    customTemplatePath: PropTypes.string\n  };\n\n  static defaultProps = {\n    onData: () => {},\n    legacyMode: false,\n    canvas: false,\n    onLoadEnd: () => {},\n    backgroundColor: \"rgba(0, 0, 0, 0)\"\n  };\n\n  constructor(props) {\n    super(props);\n    this.onGetHeight = null;\n    this.callbacks = {};\n\n    this.html = `\n      <!DOCTYPE html>\n      <html lang=\"de\">\n        <head>\n            <meta http-equiv=\"content-type\" content=\"text/html; charset=utf-8\">\n            <meta name=\"viewport\" content=\"initial-scale=1, maximum-scale=3, minimum-scale=1, user-scalable=no\">\n            <style type=\"text/css\">\n                html,body {\n                height: 100%;\n                width: 100%;\n                margin: 0;\n                padding: 0;\n                background-color:rgba(0, 0, 0, 0);\n                }\n                #main {\n                height: 100%;\n                width: 100%;\n                background-color:rgba(0, 0, 0, 0);\n                }\n            </style>\n            \n            <script>\n                ${getMinifiedEChartsFramework()}\n            </script>\n        </head>\n\n        <body>\n            <div id=\"main\">\n            </div>\n        </body>\n\n      </html>`;\n  }\n\n  onMessage = e => {\n    try {\n      if (!e) return null;\n\n      const { onData } = this.props;\n\n      const data = JSON.parse(unescape(unescape(e.nativeEvent.data)));\n\n      if (data.types === \"DATA\") {\n        onData(data.payload);\n      } else if (data.types === \"CALLBACK\") {\n        /* eslint-disable no-case-declarations */\n        const { uuid } = data;\n        /* eslint-enable no-case-declarations */\n        this.callbacks[uuid](data.payload);\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  postMessage = data => {\n    this.webview.postMessage(jsBuilder.convertToPostMessageString(data));\n  };\n\n  ID = () =>\n    `_${Math.random()\n      .toString(36)\n      .substr(2, 9)}`;\n\n  setBackgroundColor = color => {\n    const data = {\n      types: \"SET_BACKGROUND_COLOR\",\n      color\n    };\n    this.postMessage(data);\n  };\n\n  getOption = (callback, properties = undefined) => {\n    const uuid = this.ID();\n    this.callbacks[uuid] = callback;\n    const data = {\n      types: \"GET_OPTION\",\n      uuid,\n      properties\n    };\n    this.postMessage(data);\n  };\n\n  setOption = (option, notMerge, lazyUpdate) => {\n    const data = {\n      types: \"SET_OPTION\",\n      payload: {\n        option,\n        notMerge: notMerge || false,\n        lazyUpdate: lazyUpdate || false\n      }\n    };\n    this.postMessage(data);\n  };\n\n  clear = () => {\n    const data = {\n      types: \"CLEAR\"\n    };\n    this.postMessage(data);\n  };\n\n  getWebViewRef = ref => {\n    this.webview = ref;\n  };\n\n  onLoadEnd = () => {\n    if (this.webview) {\n      this.webview.injectJavaScript(jsBuilder.getJavascriptSource(this.props));\n    }\n    this.props.onLoadEnd();\n  };\n\n  render() {\n    let source = {};\n\n    if (this.props.customTemplatePath) {\n      source = {\n        uri: this.props.customTemplatePath\n      };\n    } else {\n      source = {\n        html: this.html,\n        baseUrl: \"\"\n      };\n    }\n\n    return (\n      <View style={{ flex: 1 }}>\n        <WebView\n          ref={this.getWebViewRef}\n          originWhitelist={[\"*\"]}\n          scrollEnabled={false}\n          source={source}\n          onMessage={this.onMessage}\n          allowFileAccess\n          allowUniversalAccessFromFileURLs\n          mixedContentMode=\"always\"\n          onLoadEnd={this.onLoadEnd}\n        />\n      </View>\n    );\n  }\n}\n\nexport { ECharts };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}