{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"text\", \"onChange\", \"inputRef\", \"autoFocus\"],\n    _excluded2 = [\"text\", \"step\", \"value\", \"onChange\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useEffect, useRef } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport { inputStyle } from \"../styles/components\";\nimport { MinusIcon, PlusIcon } from \"./icons\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar LabelInput = function LabelInput(_ref) {\n  var text = _ref.text,\n      onChange = _ref.onChange,\n      inputRef = _ref.inputRef,\n      autoFocus = _ref.autoFocus,\n      properties = _objectWithoutProperties(_ref, _excluded);\n\n  var thisRef = useRef();\n\n  var focus = function focus() {\n    InteractionManager.runAfterInteractions(function () {\n      thisRef.current.focus();\n    });\n  };\n\n  useEffect(function () {\n    if (inputRef) inputRef.focus = focus;\n    if (autoFocus) focus();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsxs(Text, {\n      style: inputStyle.labelText,\n      children: [text, \":\"]\n    }), _jsx(TextInput, _objectSpread({\n      ref: thisRef,\n      onChangeText: onChange,\n      style: inputStyle.label,\n      autoFocus: true\n    }, properties))]\n  });\n};\n\nvar NumberInput = function NumberInput(_ref2) {\n  var text = _ref2.text,\n      step = _ref2.step,\n      value = _ref2.value,\n      onChange = _ref2.onChange,\n      properties = _objectWithoutProperties(_ref2, _excluded2);\n\n  var inputRef = useRef();\n\n  var changeNumber = function changeNumber(callback) {\n    return function () {\n      var floatValue = parseFloat(value || 0);\n      var newValue = callback(floatValue);\n      inputRef.focus();\n      onChange(newValue);\n    };\n  };\n\n  return _jsx(View, {\n    children: _jsxs(View, {\n      style: inputStyle.number,\n      children: [_jsx(TouchableOpacity, {\n        onPress: changeNumber(function (value) {\n          return value - step;\n        }),\n        children: _jsx(MinusIcon, {})\n      }), _jsx(LabelInput, _objectSpread({\n        value: String(value),\n        text: text,\n        onChange: onChange,\n        inputRef: inputRef\n      }, properties)), _jsx(TouchableOpacity, {\n        onPress: changeNumber(function (value) {\n          return value + step;\n        }),\n        children: _jsx(PlusIcon, {})\n      })]\n    })\n  });\n};\n\nexport { LabelInput, NumberInput };","map":{"version":3,"names":["useEffect","useRef","inputStyle","MinusIcon","PlusIcon","LabelInput","text","onChange","inputRef","autoFocus","properties","thisRef","focus","InteractionManager","runAfterInteractions","current","labelText","label","NumberInput","step","value","changeNumber","callback","floatValue","parseFloat","newValue","number","String"],"sources":["C:/Users/ROLANDO MORA/Documents/Proyectos/Entrenamientos/V2/src/components/input.jsx"],"sourcesContent":["import { useEffect, useRef } from \"react\";\r\nimport { Text, TextInput, View, TouchableOpacity, InteractionManager } from \"react-native\";\r\nimport { inputStyle } from \"../styles/components\";\r\nimport { MinusIcon, PlusIcon } from \"./icons\";\r\n\r\nconst LabelInput = ({ text, onChange, inputRef, autoFocus, ...properties }) => {\r\n    const thisRef = useRef();\r\n\r\n    const focus = () => {\r\n        InteractionManager.runAfterInteractions(() => {\r\n            thisRef.current.focus();\r\n        });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(inputRef) inputRef.focus = focus;\r\n        if(autoFocus) focus();\r\n    }, []);\r\n\r\n    return (\r\n        <View>\r\n            <Text style={inputStyle.labelText}>{text}:</Text>\r\n            <TextInput\r\n                ref={thisRef}\r\n                onChangeText={onChange}\r\n                style={inputStyle.label}\r\n                autoFocus={true}\r\n                {...properties}\r\n            />\r\n        </View>\r\n    );\r\n}\r\n\r\nconst NumberInput = ({ text, step, value, onChange, ...properties }) => {\r\n    const inputRef = useRef();\r\n\r\n    const changeNumber = (callback) => () => {\r\n        const floatValue = parseFloat(value || 0);\r\n        const newValue = callback(floatValue);\r\n        inputRef.focus();\r\n        onChange(newValue);\r\n    }\r\n\r\n    return (\r\n        <View>\r\n            <View style={inputStyle.number}>\r\n                <TouchableOpacity onPress={changeNumber(value => value - step)}>\r\n                    <MinusIcon/>\r\n                </TouchableOpacity>\r\n                <LabelInput\r\n                    value={String(value)}\r\n                    text={text}\r\n                    onChange={onChange}\r\n                    inputRef={inputRef}\r\n                    {...properties}\r\n                />\r\n                <TouchableOpacity onPress={changeNumber(value => value + step)}>\r\n                    <PlusIcon/>\r\n                </TouchableOpacity>\r\n            </View>\r\n        </View>\r\n    );\r\n}\r\n\r\nexport {\r\n    LabelInput,\r\n    NumberInput\r\n}"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,EAAoBC,MAApB,QAAkC,OAAlC;;;;;;AAEA,SAASC,UAAT;AACA,SAASC,SAAT,EAAoBC,QAApB;;;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAA4D;EAAA,IAAzDC,IAAyD,QAAzDA,IAAyD;EAAA,IAAnDC,QAAmD,QAAnDA,QAAmD;EAAA,IAAzCC,QAAyC,QAAzCA,QAAyC;EAAA,IAA/BC,SAA+B,QAA/BA,SAA+B;EAAA,IAAjBC,UAAiB;;EAC3E,IAAMC,OAAO,GAAGV,MAAM,EAAtB;;EAEA,IAAMW,KAAK,GAAG,SAARA,KAAQ,GAAM;IAChBC,kBAAkB,CAACC,oBAAnB,CAAwC,YAAM;MAC1CH,OAAO,CAACI,OAAR,CAAgBH,KAAhB;IACH,CAFD;EAGH,CAJD;;EAMAZ,SAAS,CAAC,YAAM;IACZ,IAAGQ,QAAH,EAAaA,QAAQ,CAACI,KAAT,GAAiBA,KAAjB;IACb,IAAGH,SAAH,EAAcG,KAAK;EACtB,CAHQ,EAGN,EAHM,CAAT;EAKA,OACI,MAAC,IAAD;IAAA,WACI,MAAC,IAAD;MAAM,KAAK,EAAEV,UAAU,CAACc,SAAxB;MAAA,WAAoCV,IAApC;IAAA,EADJ,EAEI,KAAC,SAAD;MACI,GAAG,EAAEK,OADT;MAEI,YAAY,EAAEJ,QAFlB;MAGI,KAAK,EAAEL,UAAU,CAACe,KAHtB;MAII,SAAS,EAAE;IAJf,GAKQP,UALR,EAFJ;EAAA,EADJ;AAYH,CA1BD;;AA4BA,IAAMQ,WAAW,GAAG,SAAdA,WAAc,QAAoD;EAAA,IAAjDZ,IAAiD,SAAjDA,IAAiD;EAAA,IAA3Ca,IAA2C,SAA3CA,IAA2C;EAAA,IAArCC,KAAqC,SAArCA,KAAqC;EAAA,IAA9Bb,QAA8B,SAA9BA,QAA8B;EAAA,IAAjBG,UAAiB;;EACpE,IAAMF,QAAQ,GAAGP,MAAM,EAAvB;;EAEA,IAAMoB,YAAY,GAAG,SAAfA,YAAe,CAACC,QAAD;IAAA,OAAc,YAAM;MACrC,IAAMC,UAAU,GAAGC,UAAU,CAACJ,KAAK,IAAI,CAAV,CAA7B;MACA,IAAMK,QAAQ,GAAGH,QAAQ,CAACC,UAAD,CAAzB;MACAf,QAAQ,CAACI,KAAT;MACAL,QAAQ,CAACkB,QAAD,CAAR;IACH,CALoB;EAAA,CAArB;;EAOA,OACI,KAAC,IAAD;IAAA,UACI,MAAC,IAAD;MAAM,KAAK,EAAEvB,UAAU,CAACwB,MAAxB;MAAA,WACI,KAAC,gBAAD;QAAkB,OAAO,EAAEL,YAAY,CAAC,UAAAD,KAAK;UAAA,OAAIA,KAAK,GAAGD,IAAZ;QAAA,CAAN,CAAvC;QAAA,UACI,KAAC,SAAD;MADJ,EADJ,EAII,KAAC,UAAD;QACI,KAAK,EAAEQ,MAAM,CAACP,KAAD,CADjB;QAEI,IAAI,EAAEd,IAFV;QAGI,QAAQ,EAAEC,QAHd;QAII,QAAQ,EAAEC;MAJd,GAKQE,UALR,EAJJ,EAWI,KAAC,gBAAD;QAAkB,OAAO,EAAEW,YAAY,CAAC,UAAAD,KAAK;UAAA,OAAIA,KAAK,GAAGD,IAAZ;QAAA,CAAN,CAAvC;QAAA,UACI,KAAC,QAAD;MADJ,EAXJ;IAAA;EADJ,EADJ;AAmBH,CA7BD;;AA+BA,SACId,UADJ,EAEIa,WAFJ"},"metadata":{},"sourceType":"module"}